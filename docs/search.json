[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "社会調査のためのR入門",
    "section": "",
    "text": "社会調査のためのRの入門についての資料です．\n\n\n学部，大学院，そして研究職についてからも様々なSのつく統計ソフトを使ってきました． 私が学部の頃はRの入門書も限られていました． しかし，世界中の開発者やユーザーのおかげで，また特にRStudioやtidyverseなどによってRが格段に利用しやすくなりました．\n研究や授業でRを使用することが多くなったため，メモとしてこの資料を作成しましたが，せっかくなので公開します．\n基本的には社会調査データの分析を前提とした統計手法や例を用います．データは実際に行われた社会調査のデータをもとに作成されたものを利用します．\nプログラミング初心者でRの操作にもそもそも不慣れな筆者だからこそ，初学者に分かりやすく伝えられる部分もあるかもしれません．\nもちろん簡単なRの操作だけで終わるのはもったいないです． 様々なRの機能をフル活用することで，良い分析や図示などが可能になります． Rによって美しくインパクトのある図を描くことや最先端のモデルを用いた分析が可能です．\nデータ図示（Data Visualization）は規則性やパターンを確かめたり発見したりするための重要な方法です．\n\n\n\nパッケージについてはパッケージ名パッケージ， 関数については関数の名前の後に丸括弧をつけて，関数名()と示す．例えばtidyverseというパッケージはtidyverseパッケージ，summariseという関数はsummarise()と示す．()がついていれば関数である． 特定のパッケージの関数やオブジェクトであることを明記するためにパッケージ名::関数名()やパッケージ名::オブジェクト名とすることもある．例えばdplyr::summarise()やAER::GSS7402と示す．\nその他，オブジェクトなどはaやGSS7402ではなくaやGSS7402のように示す．括弧は必要ない．\n\n\n\n\n\n\nポイント\n\n\n\nここにポイントを記入します．ポイントは本文の邪魔にならないように折りたたんであり，右端の>をクリックすれば展開されます．読み飛ばしても大丈夫です．\n\n\n\n\n\n\n\n\n注意点\n\n\n\nここに注意点を記入します．"
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "1  Rの基礎",
    "section": "",
    "text": "まずはRStudio（あるいはRStudio Cloud）を起動すると Figure 1.1 のような画面が表示される．\n\n\n\n図 1.1： RStudioの画面\n\n\n画面には次の4つの領域（pane）がある．\n\n左上：Source pane．ここでスクリプト等を表示・編集する．ここにコードを入力する．\n左下：Console pane．Consoleの他，Terminal, Background Jobsのタブがある．コンソールには結果が表示される．\n右上：Environment pane．Environmentでは作成されたオブジェクトを確認できる．History，Connection，Built，Git，Tutorialなどのタブもある．\n右下：Output pane．ここにはファイル，図，パッケージ，ヘルプなどが表示される．\n\npaneについては一時的に縮小や拡大が可能であり，Figure 1.3 の赤で囲まれた枠でpaneの設定ができる．左上のEdit \\(\\rightarrow\\) Preferences… \\(\\rightarrow\\) Pane Layoutでも細かな設定が可能である．筆者は赤で囲まれた枠から「Console on Right」を選択し，右上にConsole paneが表示されるように設定している．\n\n\n\n図 1.2： 赤で囲まれた枠でPaneの設定"
  },
  {
    "objectID": "intro.html#rによる計算",
    "href": "intro.html#rによる計算",
    "title": "1  Rの基礎",
    "section": "1.2 Rによる計算",
    "text": "1.2 Rによる計算\nコンソール上に Figure 1.3 のような四則演算を直接入力する．\n\n\n\n図 1.3： コンソールに直接入力する\n\n\nするとすぐ下に結果が表示されるはずである．\n簡単な計算はコンソール上で行ってもよいだろう．\n\n\n\n\n\n\n[1]は何？\n\n\n\n\n\n結果の左には常に[1]が表示されて気になるかもしれない．これは結果をベクトル（数字の列）で表示した時に，画面の一番左にある数字が何番目の要素であるかを示すものである．結果が1つしかない場合は，かならず1つ目の要素となるため[1]が表示される．\n\n\n\n\n\n\n\n\n\nESCを使う\n\n\n\n\n\n計算の途中で改行すると Figure 1.4 のようになる． この場合ESCキーを押すことで>の状態に戻すことができる． 何かのミスで結果が表示されない場合などは，ESCで元の状態に戻して再度コードを検討する．\n\n\n\n図 1.4： 計算の途中で改行した結果\n\n\n\n\n\n次は，Figure 1.5 の赤い四角の部分からソースにRスクリプトを作成する．\n\n\n\n図 1.5： ここからスクリプトを開く\n\n\nそして，Rスクリプト上に以下のコードを入力する．#（ハッシュ）はメモを作成するための記号であり，同じ行で#の後にくるものは実行されない．これをコメントアウトと呼ぶ．\n\n# 足し算\n1 + 1\n# 引き算\n2 - 100\n# 掛け算\n7 * 8\n# 割り算\n123456 / 3\n# 累乗\n2^3\n\nソースのタブでは，スクリプトは保存されていない状態だとUntitled1*のように表示されている．入力が終了したら名前をつけて保存する．ファイル名はdemo_1.Rのように拡張子.Rをつける．\n保存したら，タブのすぐ下の欄にある「Source」のすぐ右から「Source with Echo」を選択するか（Rスクリプトすべてを実行），実行したい行か範囲を選択して「Run」を選択すれば（選択した範囲を実行），コンソール上に次のような結果が表示される．一度「Source with Echo」を選択すれば，後は「Source」を選択すれば，すべてのRスクリプト上のすべてのコードが実行される．\nRスクリプトのいち部を実行したい場合は，「Ctrl」+「Enter」（「command + Enter」）でカーソルの置かれている行を実行（わざわざコードを全部選択する必要はない）．同様の方法ですべてのコードを実行したい場合は，「Ctrl」+「A」+「Enter」（「command」+「A」+「Enter」）とすればよい．\n\n# 足し算\n1 + 1\n\n[1] 2\n\n# 引き算\n2 - 100\n\n[1] -98\n\n# 掛け算\n7 * 8\n\n[1] 56\n\n# 割り算\n123456 / 3\n\n[1] 41152\n\n# 累乗\n2^3\n\n[1] 8\n\n\nコンソールに入力すると記録には残らないので，Rスクリプトに入力しそれを実行するようにする．実際のところ分析の結果自体は保存して記録に残す必要はないといってもよい．分析のプロセスがRスクリプトに残っていれば，結果を何度でも再現できる．\n\n\n\n\n\n\n#（ハッシュ）の使い方\n\n\n\n\n\n#でコメントをマメに残す癖をつけておこう．コードを書いているときは理解できていても，時間が空くと何をやっているかを忘れてしまうことがよくある．すぐに作業を開始するためにもメモは残しておこう．また，他人にコードをチェックしてもらう際にもメモは重要である．\n\n# 足し算\n1 + 2\n\n[1] 3\n\n1 + 2   # 足し算\n\n[1] 3\n\n# --------------------------\n# 2023年5月9日\n# --------------------------\n# Rの基礎\n\n# 足し算\n1 + 2\n\n[1] 3\n\n\nまたRStudioの画面上のCodeからInsert Section...を選択し，Section label:にラベルを記入すると，次のようなセクションの区切りが挿入される．\n\n# ハッシュとは ------------------------------------------------------------------\n\n\n\n\nでは今度は関数（function）を使用してみる．関数は関数名()といった形となり，()の中に引数（argument）を指定する．引数は数値であったり，ベクトルであったり，データであったり，TRUEやFALSEやであったり，NULLであったり，文字であったりする．\n\n# 平方根\nsqrt(8)\n\n[1] 2.828427\n\n# 底が2の対数\nlog2(8)\n\n[1] 3\n\n# 底が2の対数 log()関数の引数にbase = 2 を加える\nlog(8, base = 2)\n\n[1] 3\n\n# 自然対数 log関数のデフォルトのbase = exp(1)\nlog(8)\n\n[1] 2.079442\n\n# 指数関数\nexp(8)\n\n[1] 2980.958\n\n\n\n\n\n\n\n\n引数の指定\n\n\n\n\n\nsqrt(x = 8)のようにするのが正しいのかもしれないが，第1引数についてはsqrt(8)と省略されることが多い．log(8, base = 2)はlog(8, 2)としてもよいが，分かりにくいかもしれない．\n\n\n\n\n\n\n\n\n\n数学の復習\n\n\n\n\n\n累乗 (\\(a^x\\))，平方根 (\\(\\sqrt{x}\\))，自然対数 (\\(\\log_e x\\))，指数関数(\\(e^x\\))，\\(e\\)はネイピア数であり， \\(e=2.718...\\)．"
  },
  {
    "objectID": "intro.html#ベクトル",
    "href": "intro.html#ベクトル",
    "title": "1  Rの基礎",
    "section": "1.3 ベクトル",
    "text": "1.3 ベクトル\n社会調査データの分析では，人々によって異なる変数の分布（たとえば中心的な傾向やばらつきの程度）や変数間の関連を分析する．その時，変数は数値の列（ベクトル）として管理され，これを引数として関数で処理を行う．複数の数値を並べるためにはc（combineの略）を用い，カンマ,でつなぐ．\n次のような4つのケースのある変数を考える．\n\\[\\{1,2,2,3\\}\\]\nRでは次のように示される．\n\n# ベクトル\nc(1,2,2,3)\n\n[1] 1 2 2 3\n\n\n次のような変数の値は実際の調査で得られることはないが，IDとして使用できるだろう．\n\\[\\{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18\\}\\]\n\n# 連続した値\n1:18\n\n [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18\n\n\n以下のような規則的な数字の列であった場合は，様々な関数を使用できる．\n\\[\\{0,2,4,6,8,10\\}\\]\n\n# 等差数列\nseq(0,10,2) # 0から10まで2つずつ増加\n\n[1]  0  2  4  6  8 10\n\n\n\\[\\{1,1,1,1,1,1,1,1,1,1\\}\\]\n\n# 繰り返し\nrep(1,10) # 1を10個\n\n [1] 1 1 1 1 1 1 1 1 1 1\n\n\n\n\n\n\n\n\n関数のヘルプ\n\n\n\n\n\n関数名は分かるがどのように引数を指定してよいかわからない場合やさらに何ができるのかを確認したい場合は，ヘルプを見てみよう． 例えば平均のmean()関数であれば?meanとする．また%in%のように特殊な表記については?\"%in%\"のように\"で囲んだ上で?をつける．[]について調べたければ?\"[\"のようにする．\"は`でもよい．つまり，?`[`としてもよい．\n単語をもとになにか調べたければhelp.search(\"mean\")のようにする． 他にもRjpWiki，個人のサイトなど，日本語や英語で検索すると多くヒットする．教科書の索引で調べるのもよいだろう．"
  },
  {
    "objectID": "intro.html#オブジェクト",
    "href": "intro.html#オブジェクト",
    "title": "1  Rの基礎",
    "section": "1.4 オブジェクト",
    "text": "1.4 オブジェクト\n値，データ，ベクトル，コメントなど様々なものをオブジェクトに代入できる．次のようにaというオブジェクトに4という値を代入してみる．\n\n# aというオブジェクトに4を代入\na <- 4\n\n代入するだけでは何もでてこないので，aと入力して実行してみる．\n\n# 結果を表示\na\n\n[1] 4\n\n\nすると先程代入された値が表示される．\nでは次に\\(\\{1,2,3,4,5,5\\}\\)というベクトルを代入してみる．\n\n# bというオブジェクトに [1,2,3,4,5,5] というベクトルを代入\nb <- c(1,2,3,4,5,5)\n# 結果を表示\nb\n\n[1] 1 2 3 4 5 5\n\n\nなおc，q，tは関数として，piははじめから組み込まれている定数として頻繁に使用されるためオブジェクトとしては使用しない．TRUEとFALSEの省略であるTとFも使用しないほうがよいだろう．C，D，Iも避けよう．\n\n# piは3.141593\npi\n\n[1] 3.141593\n\n\n\n\n\n\n\n\n<- と =\n\n\n\n\n\n代入する際に<-のかわりに=を使用することもできる．しかしRでは代入には<-，関数の引数の指定には=を一般的には使用する．\n\n# aというオブジェクトに4を代入\na <- 4   # 代入には`<-`を使用する． \na\n\n[1] 4\n\na = 4   # 代入には一般的には`=`を使用しない． \na\n\n[1] 4\n\n# \ndnorm(x = 1)  # 引数の指定には`=`を使用する\n\n[1] 0.2419707\n\ndnorm(x <- 1)  # 引数の指定には一般的には`<-`を使用しない\n\n[1] 0.2419707\n\n\nどちらでも使用できることが多く，他のRのユーザーや自分自身が混乱しないのであれば，すべて=にしても問題ない（すべて<-とすることはないかもしれない）．\n\n\n\nこのようなベクトルをオブジェクトとし，それに対して関数を適用する．"
  },
  {
    "objectID": "intro.html#rによる変数の処理",
    "href": "intro.html#rによる変数の処理",
    "title": "1  Rの基礎",
    "section": "1.5 Rによる変数の処理",
    "text": "1.5 Rによる変数の処理\n平均50，標準偏差10の正規分布からランダムに100個のデータを取り出し，架空のデータを作成する． データはrnorm()関数にn = 100，mean = 50，sd = 10を指定することで作成できる． そのデータについてはxというオブジェクトに代入しておく．\n\n# 平均50，標準偏差10の正規分布からランダムに100個のデータを取り出す\n# 再現のため乱数を指定\nset.seed(123456)\nx <- rnorm(n = 100, mean = 50, sd = 10)\nx\n\n  [1] 58.33733 47.23952 46.44998 50.87487 72.52256 58.34460 63.12416 75.02645\n  [9] 61.68232 45.73834 40.03870 38.86050 49.44268 61.74432 60.53219 50.57606\n [17] 42.64957 59.30528 66.68211 55.59688 42.46025 62.56554 50.38493 51.89540\n [25] 54.62595 45.72637 50.16586 57.04879 59.71849 43.79508 41.44133 50.69558\n [33] 39.53802 22.51132 38.70140 41.38315 65.60074 60.15088 60.43994 38.84095\n [41] 39.28696 59.67821 51.71033 41.03750 51.58289 44.98052 40.34077 48.86266\n [49] 60.85950 37.88352 32.32278 45.08308 53.21466 64.60661 65.37243 46.60431\n [57] 39.22551 35.09235 47.47253 48.78077 43.51017 53.13076 51.22811 41.63160\n [65] 56.00422 47.54065 48.15335 50.23157 45.15348 42.62094 63.02508 55.64499\n [73] 31.94956 54.38339 35.58911 59.52829 42.77018 50.48760 34.36468 26.97634\n [81] 61.57964 42.95265 34.26178 55.18352 39.35069 50.47054 58.48047 54.32678\n [89] 55.22805 47.46114 45.03148 62.60101 55.64980 46.55362 57.24810 58.64092\n [97] 53.69247 65.83596 50.60370 51.28711\n\n\n図も関数を用いることで描くことができる．hist()関数はヒストグラムを作成する．\n\n# ヒストグラム\nhist(x)\n\n\n\n\n次のように様々な関数を利用して，値を計算してみる．\n\\[\n\\sum_{i=1}^n x.\n\\]\n\n# 総和\nsum(x)\n\n[1] 5016.82\n\n\n\\[\n\\bar x = \\frac{1}{n}\\sum_{i=1}^n x.\n\\]\n\n# 平均値\nmean(x)\n\n[1] 50.1682\n\n\n値を丸めたければround()関数を使用する．小数点以下の桁数はdigitsで指定できる．まず，平均値を求めmean_xというオブジェクトに代入する．それにround()関数を適用する．\n\n# 平均値を求めmean_xというオブジェクトに代入する\nmean_x <- mean(x)\n# mean_xというオブジェクトに対してround()関数を適用する．\nround(mean_x, digits = 1)\n\n[1] 50.2\n\n\nmean_xを使用せず，次のようにしてもよい．\n\n# まとめて実行する\nround(mean(x), digits = 1)\n\n[1] 50.2\n\n\nただし計算のプロセスが見えにくいかもしれないので，後に説明するパイプ演算子を利用することが推奨される．\n\n中央値\n\n\n# 中央値\nmedian(x)\n\n[1] 50.47907\n\n\n\n不偏分散\n\n\\[\n\\frac{1}{n-1}\\sum_{i=1}^n \\left(x - \\bar x \\right).\n\\]\n\n# 不偏分散\nvar(x)\n\n[1] 98.70409\n\n\n\n標準偏差\n\n\\[\n\\sqrt{\\frac{1}{n-1}\\sum_{i=1}^n \\left(x - \\bar x \\right)}.\n\\]\n\n# 標準偏差\nsd(x)\n\n[1] 9.934993\n\n\n\n最大値と最小値\n\n\n# 最大値\nmax(x)\n\n[1] 75.02645\n\n# 最小値\nmin(x)\n\n[1] 22.51132\n\n\n\nサンプルサイズ\n\n\n# 大きさ\nlength(x)\n\n[1] 100\n\n\n\n四分位数\n\n\n# 四分位数\nquantile(x)\n\n      0%      25%      50%      75%     100% \n22.51132 42.74002 50.47907 58.33915 75.02645 \n\n\n\n要約 summary()関数を数値に適用すると，平均と四分位数を同時に示す．\n\n\n# 要約\nsummary(x)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  22.51   42.74   50.48   50.17   58.34   75.03 \n\n\n\n\n\n\n\n\nlength()関数についての注意点\n\n\n\n欠損値がある場合には，観察されたケースのサイズをlength()関数を用いて示してはいけない．もし欠損値のないケースのサイズについて知りたければsum(!is.na(x))とする．使用頻度が多い場合には，次のようにcomplete_obs()関数を作成するのがよい．\n\n# xをコピー\nx_mis <- x\n# 10から20番目の要素をNAとする\nx_mis[10:20] <- NA\n# 欠損を含むデータの表示\nx_mis\n\n  [1] 58.33733 47.23952 46.44998 50.87487 72.52256 58.34460 63.12416 75.02645\n  [9] 61.68232       NA       NA       NA       NA       NA       NA       NA\n [17]       NA       NA       NA       NA 42.46025 62.56554 50.38493 51.89540\n [25] 54.62595 45.72637 50.16586 57.04879 59.71849 43.79508 41.44133 50.69558\n [33] 39.53802 22.51132 38.70140 41.38315 65.60074 60.15088 60.43994 38.84095\n [41] 39.28696 59.67821 51.71033 41.03750 51.58289 44.98052 40.34077 48.86266\n [49] 60.85950 37.88352 32.32278 45.08308 53.21466 64.60661 65.37243 46.60431\n [57] 39.22551 35.09235 47.47253 48.78077 43.51017 53.13076 51.22811 41.63160\n [65] 56.00422 47.54065 48.15335 50.23157 45.15348 42.62094 63.02508 55.64499\n [73] 31.94956 54.38339 35.58911 59.52829 42.77018 50.48760 34.36468 26.97634\n [81] 61.57964 42.95265 34.26178 55.18352 39.35069 50.47054 58.48047 54.32678\n [89] 55.22805 47.46114 45.03148 62.60101 55.64980 46.55362 57.24810 58.64092\n [97] 53.69247 65.83596 50.60370 51.28711\n\n# 欠損値を含むサイズ\nlength(x_mis)\n\n[1] 100\n\n# 欠損値を除いたサイズ\nsum(!is.na(x_mis))\n\n[1] 89\n\n# 欠損値をた観察ケースサイズを求める関数を作成する（ここでのxはオブジェクトのxとは関係がない）\ncomplete_obs <- function(x) sum(!is.na(x))\ncomplete_obs(x_mis)\n\n[1] 89\n\n\nlength()関数を使用する際は注意しよう．データフレームの行のサイズをnrow()関数で求め，それをサンプルサイズとして用いることもあるが，これも欠損値については考慮していないことに注意が必要である．\n\n\n\n\n\n\n\n\n注意点\n\n\n\nvarとsdは \\(n\\) ではなく \\(n-1\\) で割ったものであることに注意．"
  },
  {
    "objectID": "intro.html#パッケージ",
    "href": "intro.html#パッケージ",
    "title": "1  Rの基礎",
    "section": "1.6 パッケージ",
    "text": "1.6 パッケージ\nRでは分析などの機能をひとつのパッケージとしてまとめている．RStudioの右下のOutput paneの「Packages」のタブからパッケージはインストール可能である．またはinstall.packages(\"パッケージ名\") と入力しても良い．install.packages(\"パッケージ名\", dependencies = TRUE)のようにdependencies = TRUEはつけておいたほうがよい．\n\n# 以下をコンソールに貼り付ければ，インストールされる（ただし時間がかかる）\ninstall.packages(\"tidyverse\", dependencies = TRUE)  # データの整理\ninstall.packages(\"haven\", dependencies = TRUE)  # データの読み込み\ninstall.packages(\"janitor\", dependencies = TRUE)  # データの変換\ninstall.packages(\"here\", dependencies = TRUE)   # プロジェクト内のファイルを表示\ninstall.packages(\"fs\", dependencies = TRUE)  # フォルダの作成\n\nこれまでの作業はインストールだけであり，そのままではパッケージの関数などは利用できない．パッケージを使用したい場合はlibrary(パッケージ名)で呼び出す必要がある．これはRStudioを閉じて再度立ち上げたら必要な作業なので，スクリプトに書いておく．\n\nlibrary(tidyverse)  # データの整理\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n\nlibrary(haven)  # データの読み込み\nlibrary(janitor)  # 度数分布表\n\n\nAttaching package: 'janitor'\n\nThe following objects are masked from 'package:stats':\n\n    chisq.test, fisher.test\n\nlibrary(here)  # プロジェクト内のファイルを表示\n\nhere() starts at /Users/sf/GitHub/R4SS\n\nlibrary(fs)  # ファイルの作成\n\nなおインストールされているパッケージについてはOutput paneの「Packages」のタブか .packages(all.available=TRUE)と入力することで確認できる．\n以上の作業をまとめて行いたい場合，pacmanパッケージのp_load()関数を用いる．\n\n# pacmanパッケージがインストールされていない場合は以下からインストールを実行\n#install.packages(\"pacman\")\n# パッケージのインストール（もしインストールされていなければ）と呼び出し\npacman::p_load(tidyverse,\n               haven,\n               janitor)\n\n\n\n\n\n\n\nパッケージ名::関数名\n\n\n\n複数のパッケージで同じ関数名を使用することがある．そのため，意図しているパッケージの関数とは異なる関数を用いてしまい，エラーが出ることがある．エラーがでればましなほうで，気づかずに誤った計算をしてしまう可能性もある．このようなリスクを避けるためにはパッケージ名::関数名とする．"
  },
  {
    "objectID": "intro.html#パイプ演算子",
    "href": "intro.html#パイプ演算子",
    "title": "1  Rの基礎",
    "section": "1.7 パイプ演算子",
    "text": "1.7 パイプ演算子\n通常は関数(引数)として入力されるが，パイプ処理では引数 |> 関数()のようにパイプの左側の結果をパイプ右側に配置した関数の最初の引数（第1引数）に適用できる． 更に|>を複数つなげてデータ |> 関数() |> 関数() のようにできるため，どのような処理を行ったかが分かりやすい形でコードが整理される．\n\n# 総和\nx |> sum()\n\n[1] 5016.82\n\n# 平均値\nx |> mean()\n\n[1] 50.1682\n\n# 平均値を丸める\nx |> mean() |> round(digits = 1)\n\n[1] 50.2\n\n# 中央値\nx |> median()\n\n[1] 50.47907\n\n# 不偏分散\nx |> var()\n\n[1] 98.70409\n\n# 標準偏差\nx |> sd()\n\n[1] 9.934993\n\n# 最大値\nx |> max()\n\n[1] 75.02645\n\n# 最小値\nx |> min()\n\n[1] 22.51132\n\n# 大きさ\nx |> length()\n\n[1] 100\n\n# 四分位数\nx |> quantile()\n\n      0%      25%      50%      75%     100% \n22.51132 42.74002 50.47907 58.33915 75.02645 \n\n# 要約\nx |> summary()\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  22.51   42.74   50.48   50.17   58.34   75.03 \n\n\n\n\n\n\n\n\n2つのパイプ演算子\n\n\n\n\n\nパイプ演算子はもともとmagrittrパッケージの%>%という演算子のことを示していた．しかし，R4.1+では|>が標準で組み込まれている（ネイティブパイプと呼ばれる）．したがって|>を使用するのにmagrittrパッケージを呼び出す必要はない．実際は%>%のほうが分かりやすく，使用しやすい場面もある．なお，パイプ演算子のショートカットキーは \\(\\uparrow\\) +「Command」+「m」である．\n\nlibrary(magrittr)\n\n\nAttaching package: 'magrittr'\n\n\nThe following object is masked from 'package:purrr':\n\n    set_names\n\n\nThe following object is masked from 'package:tidyr':\n\n    extract\n\nx %>% mean()\n\n[1] 50.1682\n\nx |> mean()\n\n[1] 50.1682"
  },
  {
    "objectID": "intro.html#作業ディレクトリを作成する",
    "href": "intro.html#作業ディレクトリを作成する",
    "title": "1  Rの基礎",
    "section": "1.8 作業ディレクトリを作成する",
    "text": "1.8 作業ディレクトリを作成する\nデータ，スクリプト，作成した図表，先行研究，資料，執筆した論文などをひとつのフォルダの中にまとめておこう．このようなあるプロジェクトに関連するファイルが含まれたフォルダを作業ディレクトリ（Working Directory）と呼ぶ．例えばここではR4SSという名前のフォルダを作成する．中身はひとまずはからのままでもよい．\nR4SSというフォルダを作成しても，RにはR4SSフォルダは作業ディレクトリとしては認識していない．\n「Session」\\(\\rightarrow\\)「Set Working Directory」\\(\\rightarrow\\)「Choose Directory…」を選択し，R4SSフォルダを探して選択し，「Open」を選択することによって， R4SSが作業ディレクトリとしては認識される．\n\n\n\n作業ディレクトリの変更方法\n\n\n以下のコードを入力し，指定したフォルダが作業ディレクトリとして認識されているかどうかを確認してみよう．\n\n\n\n作業ディレクトリの確認方法\n\n\n\ngetwd()\n\n[1] \"/Users/sf/GitHub/R4SS\"\n\n\n基本的にはRStudioを起動するたびに作業ディレクトリを指定する必要がある． しかし，以下で説明するプロジェクトを指定する作業を一度行ってしまえば，その作業の必要はない．"
  },
  {
    "objectID": "intro.html#プロジェクトの作成",
    "href": "intro.html#プロジェクトの作成",
    "title": "1  Rの基礎",
    "section": "1.9 プロジェクトの作成",
    "text": "1.9 プロジェクトの作成\nFigure 1.6 のように左上のアイコンからプロジェクトを作成しよう．すでにR4SSという名前のフォルダを作成されているという前提で手順を説明する．\n\n\n\n図 1.6： プロジェクトを作成する\n\n\nFigure 1.7 のように，新規でディレクトリ（New Directory）を作成するのか，すでにあるディレクトリ（Existing Directory）を使うのかをたずねられるので，ここではすでにあるディレクトリを使用する．「Browse」を選択し，作業ディレクトリを選択したら「Open」を選択する．「Projecto working directory:」の欄にパスが記入された状態になるので，「Create Project」を選択する．\n\n\n\n図 1.7： 新規にフォルダを作成するか既存のフォルダを利用するのかを選択する\n\n\nすると，R4SSというフォルダの中にR4SS.Rprojというファイルが作成される．このように，プロジェクトファイル（R4SS.Rprojのように.Rprojという拡張子のファイル）を作業ディレクトリに作成しておけば，.Rprojファイルをクリックすると自動的にファイルのある場所が作業ディレクトリとして指定される．確認の方法は複数ある．\n\nConsoleペインのタブのすぐ下に作業ディレクトリが表示されているか．\nFilesペインの右側のプロジェクトのアイコンをクリックすると作業ディレクトリの中身がFilesの中に表示されているか．\ngetwd()関数を実行する．\nhereパッケージのhere()関数を用いる．\n\n\n# 作業ディレクトリの確認\ngetwd()\n\n[1] \"/Users/sf/GitHub/R4SS\"\n\n\nhereパッケージのhere()関数を用いる．\n\n# 作業ディレクトリの確認\nhere()\n\n[1] \"/Users/sf/GitHub/R4SS\""
  },
  {
    "objectID": "intro.html#フォルダの整理",
    "href": "intro.html#フォルダの整理",
    "title": "1  Rの基礎",
    "section": "1.10 フォルダの整理",
    "text": "1.10 フォルダの整理\ndir_create()関数でファイルを作成する．ファイルの作成場所にhere()とすれば作業ディレクトリにファイルが作成されるので，here(c(\"フォルダ1\", \"フォルダ2\",...))のようにすれば，作業ディレクトリにフォルダ1，フォルダ2，．．．のようにファイルが作成される．\n次のコードによって，作業ディレクトリにscripts，figures，tables，documents，manuscriptsというフォルダを作成する．\n\ndir_create(here(c(\"scripts\",           # Rスクリプトを保存\n                  \"figures\",           # 図を保存\n                  \"tables\",           # 表を保存\n                  \"documents\",        # 先行研究や資料を保存するフォルダ\n                  \"manuscripts\"      # 原稿を保存\n                  )))\n\ndataというフォルダには未加工のデータを保存するフォルダrawと処理済みのデータを保存するフォルダprocessedの2つを準備したい．here()関数の第1引数を\"data\"とし第2引数を\"raw\"として，dir_create()関数を適用する．\n順番に確認していこう．作業ディレクトリのdataというフォルダのrawというフォルダはhere(\"data\", \"raw\")で，作業ディレクトリのdataというフォルダのprocessedというフォルダはhere(\"data\", \"processed\")で指定できる．\n\nhere(\"data\", \"raw\")\n\n[1] \"/Users/sf/GitHub/R4SS/data/raw\"\n\nhere(\"data\", \"processed\")\n\n[1] \"/Users/sf/GitHub/R4SS/data/processed\"\n\n\nこれはパスを書いただけなので，dir_create()関数でフォルダを作成する．\n\ndir_create(here(\"data\", \"raw\"))        # データを保存（生データ）\ndir_create(here(\"data\", \"processed\"))  # データを保存（処理したデータ）\n\n次のようなフォルダが作成されていれば作業完了である．\n\nR4SS：作業ディレクトリ\n\ndata：データを保存するフォルダ\n\nprocessed：加工したデータを保存するフォルダ\nraw：加工前の生データを保存するフォルダ\n\nscripts：Rスクリプトを保存するフォルダ\nfigures：図を保存するフォルダ\ntables：表を保存するフォルダ\ndocuments：先行研究や資料を保存するフォルダ\nmanuscripts：原稿を保存するフォルダ\n\n\n先程保存したRスクリプトはscriptsフォルダ内に移動しておこう．"
  },
  {
    "objectID": "intro.html#ファイルの場所を表示する",
    "href": "intro.html#ファイルの場所を表示する",
    "title": "1  Rの基礎",
    "section": "1.11 ファイルの場所を表示する",
    "text": "1.11 ファイルの場所を表示する\nu001.csvの場所は，../R4SS/data/u001.csvのようになっている． here()をつかって表示してみよう．\n\n# u001.csvの場所の表示\nhere(\"data\", \"raw\", \"u001.csv\")\n\n[1] \"/Users/sf/GitHub/R4SS/data/raw/u001.csv\""
  },
  {
    "objectID": "intro.html#rの終了",
    "href": "intro.html#rの終了",
    "title": "1  Rの基礎",
    "section": "1.12 Rの終了",
    "text": "1.12 Rの終了\nRスクリプトを保存して終了すればよい．個人的には作業スペースの保存は必要ないと考えるので，Save Workspace…などとたずねられても，Noとする．Figure 1.8 で，「Restore .RData into workspace at startup」のチェックは外し，「Save Workspace to .RDta on exit:」も「Never」としておこう．\n\n\n\n図 1.8： 保存についてのオプション"
  },
  {
    "objectID": "pipe.html",
    "href": "pipe.html",
    "title": "2  パイプ演算子",
    "section": "",
    "text": "ここでは複数の関数を用いた作業を内容を理解しやすくするためのパイプ演算子（Pipe Operator）について説明する．\n|> あるいは %>% を使用する．後者についてはmagrittrパッケージに組み込まれているがtidyverseパッケージ（あるいはdplyr）やjanitor を呼び出せば使用できる．シンプルな関数（引数が1つであったり，第1引数を主に使う場合）であればどちらでも違いはないが，できるだけ|>を使用することを本資料では試みる．\nmean(x) のような関数meanを使用する際， x(argument, 代入される値)を引数と呼ぶ．"
  },
  {
    "objectID": "pipe.html#ベクトルの例",
    "href": "pipe.html#ベクトルの例",
    "title": "2  パイプ演算子",
    "section": "2.1 ベクトルの例",
    "text": "2.1 ベクトルの例\n\na <- 1:100\na\n\n  [1]   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18\n [19]  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36\n [37]  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54\n [55]  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71  72\n [73]  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89  90\n [91]  91  92  93  94  95  96  97  98  99 100"
  },
  {
    "objectID": "pipe.html#通常の関数の適用方法",
    "href": "pipe.html#通常の関数の適用方法",
    "title": "2  パイプ演算子",
    "section": "2.2 通常の関数の適用方法",
    "text": "2.2 通常の関数の適用方法\n\nmean(a)\n\n[1] 50.5"
  },
  {
    "objectID": "pipe.html#パイプ演算子を使う",
    "href": "pipe.html#パイプ演算子を使う",
    "title": "2  パイプ演算子",
    "section": "2.3 パイプ演算子を使う",
    "text": "2.3 パイプ演算子を使う\n\na %>% mean()\n\n[1] 50.5\n\na %>% mean\n\n[1] 50.5\n\na %>% mean(.)\n\n[1] 50.5\n\na %>% {mean(.)}\n\n[1] 50.5\n\na %>% {c(mean(.), sd(.), min(.), max(.), length(.))}\n\n[1]  50.50000  29.01149   1.00000 100.00000 100.00000\n\na %>% {list(mean(.), sd(.), min(.), max(.), length(.))}\n\n[[1]]\n[1] 50.5\n\n[[2]]\n[1] 29.01149\n\n[[3]]\n[1] 1\n\n[[4]]\n[1] 100\n\n[[5]]\n[1] 100"
  },
  {
    "objectID": "pipe.html#naive-pipeを使う",
    "href": "pipe.html#naive-pipeを使う",
    "title": "2  パイプ演算子",
    "section": "2.4 naive pipeを使う",
    "text": "2.4 naive pipeを使う\n\na |> mean()\na |> mean  # エラー\na |> mean(_)  # エラー\na |> {mean(.)}  # エラー\na |> {c(mean(.), sd(.), min(.), max(.), length(.))}  # エラー\na |> {list(mean(.), sd(.), min(.), max(.), length(.))}  # エラー"
  },
  {
    "objectID": "pipe.html#新たな関数を作成する",
    "href": "pipe.html#新たな関数を作成する",
    "title": "2  パイプ演算子",
    "section": "2.5 新たな関数を作成する．",
    "text": "2.5 新たな関数を作成する．\nfunction(x) {} の代わりに \\(x){}を使う．関数部分は()でくくり (\\(x){})のようにする．慣れたら\\(x)のあとの{}は省略する．またxを.としてもよい．\n\na |> mean()\n\n[1] 50.5\n\na |> mean(x = _)\n\n[1] 50.5\n\na |> (\\(x) mean(x))()\n\n[1] 50.5\n\na |> (\\(x) mean(x))(x = _)\n\n[1] 50.5\n\na |> (\\(x) list(Mean = mean(x), SD = sd(x), Min = min(x), Max = max(x), n = length(x)))()\n\n$Mean\n[1] 50.5\n\n$SD\n[1] 29.01149\n\n$Min\n[1] 1\n\n$Max\n[1] 100\n\n$n\n[1] 100\n\na |> (\\(x) list(Mean = mean(x)))()\n\n$Mean\n[1] 50.5\n\na |> (\\(x) c(Mean = mean(x), SD = sd(x), Min = min(x), Max = max(x), n = length(x)))()\n\n     Mean        SD       Min       Max         n \n 50.50000  29.01149   1.00000 100.00000 100.00000 \n\na |> (\\(x) list(Mean = mean(x), SD = sd(x), Min = min(x), Max = max(x), n = length(x)))()\n\n$Mean\n[1] 50.5\n\n$SD\n[1] 29.01149\n\n$Min\n[1] 1\n\n$Max\n[1] 100\n\n$n\n[1] 100\n\n\n慣れるまでは読解が難しいが，次のように表現も可能である．\n\na |> mean()\n\n[1] 50.5\n\na |> (\\(.) mean(.))()\n\n[1] 50.5\n\na |> (\\(.) mean(.))(. = _)\n\n[1] 50.5\n\na |> (\\(.) list(Mean = mean(.), SD = sd(.), Min = min(.), Max = max(.), n = length(.)))()\n\n$Mean\n[1] 50.5\n\n$SD\n[1] 29.01149\n\n$Min\n[1] 1\n\n$Max\n[1] 100\n\n$n\n[1] 100\n\na |> (\\(.) list(Mean = mean(.)))()\n\n$Mean\n[1] 50.5\n\na |> (\\(.) c(Mean = mean(.), SD = sd(.), Min = min(.), Max = max(.), n = length(.)))()\n\n     Mean        SD       Min       Max         n \n 50.50000  29.01149   1.00000 100.00000 100.00000 \n\na |> (\\(.) list(Mean = mean(.), SD = sd(.), Min = min(.), Max = max(.), n = length(.)))()\n\n$Mean\n[1] 50.5\n\n$SD\n[1] 29.01149\n\n$Min\n[1] 1\n\n$Max\n[1] 100\n\n$n\n[1] 100"
  },
  {
    "objectID": "pipe.html#スターウォーズデータの例",
    "href": "pipe.html#スターウォーズデータの例",
    "title": "2  パイプ演算子",
    "section": "2.7 スターウォーズデータの例",
    "text": "2.7 スターウォーズデータの例\n\nstarwars\n\n# A tibble: 87 × 14\n   name     height  mass hair_color skin_color eye_color birth_year sex   gender\n   <chr>     <int> <dbl> <chr>      <chr>      <chr>          <dbl> <chr> <chr> \n 1 Luke Sk…    172    77 blond      fair       blue            19   male  mascu…\n 2 C-3PO       167    75 <NA>       gold       yellow         112   none  mascu…\n 3 R2-D2        96    32 <NA>       white, bl… red             33   none  mascu…\n 4 Darth V…    202   136 none       white      yellow          41.9 male  mascu…\n 5 Leia Or…    150    49 brown      light      brown           19   fema… femin…\n 6 Owen La…    178   120 brown, gr… light      blue            52   male  mascu…\n 7 Beru Wh…    165    75 brown      light      blue            47   fema… femin…\n 8 R5-D4        97    32 <NA>       white, red red             NA   none  mascu…\n 9 Biggs D…    183    84 black      light      brown           24   male  mascu…\n10 Obi-Wan…    182    77 auburn, w… fair       blue-gray       57   male  mascu…\n# ℹ 77 more rows\n# ℹ 5 more variables: homeworld <chr>, species <chr>, films <list>,\n#   vehicles <list>, starships <list>\n\n# 中身を確認\nglimpse(starwars)\n\nRows: 87\nColumns: 14\n$ name       <chr> \"Luke Skywalker\", \"C-3PO\", \"R2-D2\", \"Darth Vader\", \"Leia Or…\n$ height     <int> 172, 167, 96, 202, 150, 178, 165, 97, 183, 182, 188, 180, 2…\n$ mass       <dbl> 77.0, 75.0, 32.0, 136.0, 49.0, 120.0, 75.0, 32.0, 84.0, 77.…\n$ hair_color <chr> \"blond\", NA, NA, \"none\", \"brown\", \"brown, grey\", \"brown\", N…\n$ skin_color <chr> \"fair\", \"gold\", \"white, blue\", \"white\", \"light\", \"light\", \"…\n$ eye_color  <chr> \"blue\", \"yellow\", \"red\", \"yellow\", \"brown\", \"blue\", \"blue\",…\n$ birth_year <dbl> 19.0, 112.0, 33.0, 41.9, 19.0, 52.0, 47.0, NA, 24.0, 57.0, …\n$ sex        <chr> \"male\", \"none\", \"none\", \"male\", \"female\", \"male\", \"female\",…\n$ gender     <chr> \"masculine\", \"masculine\", \"masculine\", \"masculine\", \"femini…\n$ homeworld  <chr> \"Tatooine\", \"Tatooine\", \"Naboo\", \"Tatooine\", \"Alderaan\", \"T…\n$ species    <chr> \"Human\", \"Droid\", \"Droid\", \"Human\", \"Human\", \"Human\", \"Huma…\n$ films      <list> <\"The Empire Strikes Back\", \"Revenge of the Sith\", \"Return…\n$ vehicles   <list> <\"Snowspeeder\", \"Imperial Speeder Bike\">, <>, <>, <>, \"Imp…\n$ starships  <list> <\"X-wing\", \"Imperial shuttle\">, <>, <>, \"TIE Advanced x1\",…\n\nstarwars %>% glimpse()\n\nRows: 87\nColumns: 14\n$ name       <chr> \"Luke Skywalker\", \"C-3PO\", \"R2-D2\", \"Darth Vader\", \"Leia Or…\n$ height     <int> 172, 167, 96, 202, 150, 178, 165, 97, 183, 182, 188, 180, 2…\n$ mass       <dbl> 77.0, 75.0, 32.0, 136.0, 49.0, 120.0, 75.0, 32.0, 84.0, 77.…\n$ hair_color <chr> \"blond\", NA, NA, \"none\", \"brown\", \"brown, grey\", \"brown\", N…\n$ skin_color <chr> \"fair\", \"gold\", \"white, blue\", \"white\", \"light\", \"light\", \"…\n$ eye_color  <chr> \"blue\", \"yellow\", \"red\", \"yellow\", \"brown\", \"blue\", \"blue\",…\n$ birth_year <dbl> 19.0, 112.0, 33.0, 41.9, 19.0, 52.0, 47.0, NA, 24.0, 57.0, …\n$ sex        <chr> \"male\", \"none\", \"none\", \"male\", \"female\", \"male\", \"female\",…\n$ gender     <chr> \"masculine\", \"masculine\", \"masculine\", \"masculine\", \"femini…\n$ homeworld  <chr> \"Tatooine\", \"Tatooine\", \"Naboo\", \"Tatooine\", \"Alderaan\", \"T…\n$ species    <chr> \"Human\", \"Droid\", \"Droid\", \"Human\", \"Human\", \"Human\", \"Huma…\n$ films      <list> <\"The Empire Strikes Back\", \"Revenge of the Sith\", \"Return…\n$ vehicles   <list> <\"Snowspeeder\", \"Imperial Speeder Bike\">, <>, <>, <>, \"Imp…\n$ starships  <list> <\"X-wing\", \"Imperial shuttle\">, <>, <>, \"TIE Advanced x1\",…\n\nstarwars |>  glimpse()\n\nRows: 87\nColumns: 14\n$ name       <chr> \"Luke Skywalker\", \"C-3PO\", \"R2-D2\", \"Darth Vader\", \"Leia Or…\n$ height     <int> 172, 167, 96, 202, 150, 178, 165, 97, 183, 182, 188, 180, 2…\n$ mass       <dbl> 77.0, 75.0, 32.0, 136.0, 49.0, 120.0, 75.0, 32.0, 84.0, 77.…\n$ hair_color <chr> \"blond\", NA, NA, \"none\", \"brown\", \"brown, grey\", \"brown\", N…\n$ skin_color <chr> \"fair\", \"gold\", \"white, blue\", \"white\", \"light\", \"light\", \"…\n$ eye_color  <chr> \"blue\", \"yellow\", \"red\", \"yellow\", \"brown\", \"blue\", \"blue\",…\n$ birth_year <dbl> 19.0, 112.0, 33.0, 41.9, 19.0, 52.0, 47.0, NA, 24.0, 57.0, …\n$ sex        <chr> \"male\", \"none\", \"none\", \"male\", \"female\", \"male\", \"female\",…\n$ gender     <chr> \"masculine\", \"masculine\", \"masculine\", \"masculine\", \"femini…\n$ homeworld  <chr> \"Tatooine\", \"Tatooine\", \"Naboo\", \"Tatooine\", \"Alderaan\", \"T…\n$ species    <chr> \"Human\", \"Droid\", \"Droid\", \"Human\", \"Human\", \"Human\", \"Huma…\n$ films      <list> <\"The Empire Strikes Back\", \"Revenge of the Sith\", \"Return…\n$ vehicles   <list> <\"Snowspeeder\", \"Imperial Speeder Bike\">, <>, <>, <>, \"Imp…\n$ starships  <list> <\"X-wing\", \"Imperial shuttle\">, <>, <>, \"TIE Advanced x1\",…\n\n# 変数名\nnames(starwars)\n\n [1] \"name\"       \"height\"     \"mass\"       \"hair_color\" \"skin_color\"\n [6] \"eye_color\"  \"birth_year\" \"sex\"        \"gender\"     \"homeworld\" \n[11] \"species\"    \"films\"      \"vehicles\"   \"starships\" \n\nstarwars %>% names()\n\n [1] \"name\"       \"height\"     \"mass\"       \"hair_color\" \"skin_color\"\n [6] \"eye_color\"  \"birth_year\" \"sex\"        \"gender\"     \"homeworld\" \n[11] \"species\"    \"films\"      \"vehicles\"   \"starships\" \n\nstarwars |>  names()\n\n [1] \"name\"       \"height\"     \"mass\"       \"hair_color\" \"skin_color\"\n [6] \"eye_color\"  \"birth_year\" \"sex\"        \"gender\"     \"homeworld\" \n[11] \"species\"    \"films\"      \"vehicles\"   \"starships\" \n\n# 平均\nstarwars$height\n\n [1] 172 167  96 202 150 178 165  97 183 182 188 180 228 180 173 175 170 180  66\n[20] 170 183 200 190 177 175 180 150  NA  88 160 193 191 170 196 224 206 183 137\n[39] 112 183 163 175 180 178  94 122 163 188 198 196 171 184 188 264 188 196 185\n[58] 157 183 183 170 166 165 193 191 183 168 198 229 213 167  79  96 193 191 178\n[77] 216 234 188 178 206  NA  NA  NA  NA  NA 165\n\nmean(starwars$height)\n\n[1] NA\n\nmean(starwars$height, na.rm = TRUE)\n\n[1] 174.358\n\nstarwars$height %>% mean(na.rm = TRUE)\n\n[1] 174.358\n\nstarwars$height |>  mean(na.rm = TRUE)\n\n[1] 174.358\n\nstarwars |> pull(height) |> mean(na.rm = TRUE)\n\n[1] 174.358\n\nmean(starwars$mass)\n\n[1] NA\n\nmean(starwars$mass, na.rm = TRUE)\n\n[1] 97.31186\n\nstarwars$mass %>% mean(na.rm = TRUE)\n\n[1] 97.31186\n\nstarwars$mass |>  mean(na.rm = TRUE)\n\n[1] 97.31186\n\nstarwars |> pull(mass) |> mean(na.rm = TRUE)\n\n[1] 97.31186\n\n# 度数分布\n# 度数だけならcount\ncount(starwars, gender)\n\n# A tibble: 3 × 2\n  gender        n\n  <chr>     <int>\n1 feminine     17\n2 masculine    66\n3 <NA>          4\n\ncount(starwars, sex)\n\n# A tibble: 5 × 2\n  sex                n\n  <chr>          <int>\n1 female            16\n2 hermaphroditic     1\n3 male              60\n4 none               6\n5 <NA>               4\n\nstarwars %>% count(gender)\n\n# A tibble: 3 × 2\n  gender        n\n  <chr>     <int>\n1 feminine     17\n2 masculine    66\n3 <NA>          4\n\nstarwars %>% count(sex)\n\n# A tibble: 5 × 2\n  sex                n\n  <chr>          <int>\n1 female            16\n2 hermaphroditic     1\n3 male              60\n4 none               6\n5 <NA>               4\n\nstarwars |> count(gender)\n\n# A tibble: 3 × 2\n  gender        n\n  <chr>     <int>\n1 feminine     17\n2 masculine    66\n3 <NA>          4\n\nstarwars |> count(sex)\n\n# A tibble: 5 × 2\n  sex                n\n  <chr>          <int>\n1 female            16\n2 hermaphroditic     1\n3 male              60\n4 none               6\n5 <NA>               4\n\n# 変数の組み合わせごとに度数を表示\ncount(starwars, sex, gender)\n\n# A tibble: 6 × 3\n  sex            gender        n\n  <chr>          <chr>     <int>\n1 female         feminine     16\n2 hermaphroditic masculine     1\n3 male           masculine    60\n4 none           feminine      1\n5 none           masculine     5\n6 <NA>           <NA>          4\n\nstarwars %>% count(sex, gender)\n\n# A tibble: 6 × 3\n  sex            gender        n\n  <chr>          <chr>     <int>\n1 female         feminine     16\n2 hermaphroditic masculine     1\n3 male           masculine    60\n4 none           feminine      1\n5 none           masculine     5\n6 <NA>           <NA>          4\n\nstarwars |> count(sex, gender)\n\n# A tibble: 6 × 3\n  sex            gender        n\n  <chr>          <chr>     <int>\n1 female         feminine     16\n2 hermaphroditic masculine     1\n3 male           masculine    60\n4 none           feminine      1\n5 none           masculine     5\n6 <NA>           <NA>          4\n\n# %も表示したいならtabyl\ntabyl(starwars, gender)\n\n    gender  n    percent valid_percent\n  feminine 17 0.19540230     0.2048193\n masculine 66 0.75862069     0.7951807\n      <NA>  4 0.04597701            NA\n\ntabyl(starwars, sex)\n\n            sex  n    percent valid_percent\n         female 16 0.18390805    0.19277108\n hermaphroditic  1 0.01149425    0.01204819\n           male 60 0.68965517    0.72289157\n           none  6 0.06896552    0.07228916\n           <NA>  4 0.04597701            NA\n\nstarwars %>% tabyl(gender)\n\n    gender  n    percent valid_percent\n  feminine 17 0.19540230     0.2048193\n masculine 66 0.75862069     0.7951807\n      <NA>  4 0.04597701            NA\n\nstarwars %>% tabyl(sex)\n\n            sex  n    percent valid_percent\n         female 16 0.18390805    0.19277108\n hermaphroditic  1 0.01149425    0.01204819\n           male 60 0.68965517    0.72289157\n           none  6 0.06896552    0.07228916\n           <NA>  4 0.04597701            NA\n\nstarwars |> tabyl(gender)\n\n    gender  n    percent valid_percent\n  feminine 17 0.19540230     0.2048193\n masculine 66 0.75862069     0.7951807\n      <NA>  4 0.04597701            NA\n\nstarwars |> tabyl(sex)\n\n            sex  n    percent valid_percent\n         female 16 0.18390805    0.19277108\n hermaphroditic  1 0.01149425    0.01204819\n           male 60 0.68965517    0.72289157\n           none  6 0.06896552    0.07228916\n           <NA>  4 0.04597701            NA\n\n# 変数の選択\nstarwars\n\n# A tibble: 87 × 14\n   name     height  mass hair_color skin_color eye_color birth_year sex   gender\n   <chr>     <int> <dbl> <chr>      <chr>      <chr>          <dbl> <chr> <chr> \n 1 Luke Sk…    172    77 blond      fair       blue            19   male  mascu…\n 2 C-3PO       167    75 <NA>       gold       yellow         112   none  mascu…\n 3 R2-D2        96    32 <NA>       white, bl… red             33   none  mascu…\n 4 Darth V…    202   136 none       white      yellow          41.9 male  mascu…\n 5 Leia Or…    150    49 brown      light      brown           19   fema… femin…\n 6 Owen La…    178   120 brown, gr… light      blue            52   male  mascu…\n 7 Beru Wh…    165    75 brown      light      blue            47   fema… femin…\n 8 R5-D4        97    32 <NA>       white, red red             NA   none  mascu…\n 9 Biggs D…    183    84 black      light      brown           24   male  mascu…\n10 Obi-Wan…    182    77 auburn, w… fair       blue-gray       57   male  mascu…\n# ℹ 77 more rows\n# ℹ 5 more variables: homeworld <chr>, species <chr>, films <list>,\n#   vehicles <list>, starships <list>\n\ndplyr::select(starwars, name, height, mass)\n\n# A tibble: 87 × 3\n   name               height  mass\n   <chr>               <int> <dbl>\n 1 Luke Skywalker        172    77\n 2 C-3PO                 167    75\n 3 R2-D2                  96    32\n 4 Darth Vader           202   136\n 5 Leia Organa           150    49\n 6 Owen Lars             178   120\n 7 Beru Whitesun lars    165    75\n 8 R5-D4                  97    32\n 9 Biggs Darklighter     183    84\n10 Obi-Wan Kenobi        182    77\n# ℹ 77 more rows\n\nstarwars %>% dplyr::select(name, height, mass)\n\n# A tibble: 87 × 3\n   name               height  mass\n   <chr>               <int> <dbl>\n 1 Luke Skywalker        172    77\n 2 C-3PO                 167    75\n 3 R2-D2                  96    32\n 4 Darth Vader           202   136\n 5 Leia Organa           150    49\n 6 Owen Lars             178   120\n 7 Beru Whitesun lars    165    75\n 8 R5-D4                  97    32\n 9 Biggs Darklighter     183    84\n10 Obi-Wan Kenobi        182    77\n# ℹ 77 more rows\n\nstarwars |> dplyr::select(name, height, mass)\n\n# A tibble: 87 × 3\n   name               height  mass\n   <chr>               <int> <dbl>\n 1 Luke Skywalker        172    77\n 2 C-3PO                 167    75\n 3 R2-D2                  96    32\n 4 Darth Vader           202   136\n 5 Leia Organa           150    49\n 6 Owen Lars             178   120\n 7 Beru Whitesun lars    165    75\n 8 R5-D4                  97    32\n 9 Biggs Darklighter     183    84\n10 Obi-Wan Kenobi        182    77\n# ℹ 77 more rows\n\n# 回帰分析\nlm(height ~ sex, data = starwars)\n\n\nCall:\nlm(formula = height ~ sex, data = starwars)\n\nCoefficients:\n      (Intercept)  sexhermaphroditic            sexmale            sexnone  \n          169.267              5.733              9.839            -38.067  \n\nsummary(lm(height ~ sex, data = starwars))\n\n\nCall:\nlm(formula = height ~ sex, data = starwars)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-113.105   -6.896    1.895   13.895   84.895 \n\nCoefficients:\n                  Estimate Std. Error t value Pr(>|t|)    \n(Intercept)        169.267      8.780  19.279   <2e-16 ***\nsexhermaphroditic    5.733     35.120   0.163   0.8708    \nsexmale              9.839      9.868   0.997   0.3220    \nsexnone            -38.067     17.560  -2.168   0.0334 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 34 on 74 degrees of freedom\n  (9 observations deleted due to missingness)\nMultiple R-squared:  0.1137,    Adjusted R-squared:  0.07781 \nF-statistic: 3.166 on 3 and 74 DF,  p-value: 0.02937\n\nstarwars %>% lm(height ~ sex, data = .)\n\n\nCall:\nlm(formula = height ~ sex, data = .)\n\nCoefficients:\n      (Intercept)  sexhermaphroditic            sexmale            sexnone  \n          169.267              5.733              9.839            -38.067  \n\nstarwars %>% lm(height ~ sex, data = .) %>% summary()\n\n\nCall:\nlm(formula = height ~ sex, data = .)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-113.105   -6.896    1.895   13.895   84.895 \n\nCoefficients:\n                  Estimate Std. Error t value Pr(>|t|)    \n(Intercept)        169.267      8.780  19.279   <2e-16 ***\nsexhermaphroditic    5.733     35.120   0.163   0.8708    \nsexmale              9.839      9.868   0.997   0.3220    \nsexnone            -38.067     17.560  -2.168   0.0334 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 34 on 74 degrees of freedom\n  (9 observations deleted due to missingness)\nMultiple R-squared:  0.1137,    Adjusted R-squared:  0.07781 \nF-statistic: 3.166 on 3 and 74 DF,  p-value: 0.02937\n\nstarwars %>%\n  drop_na(height, sex) %>% \n  lm(height ~ sex, data = .) %>% \n  summary()\n\n\nCall:\nlm(formula = height ~ sex, data = .)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-113.105   -6.896    1.895   13.895   84.895 \n\nCoefficients:\n                  Estimate Std. Error t value Pr(>|t|)    \n(Intercept)        169.267      8.780  19.279   <2e-16 ***\nsexhermaphroditic    5.733     35.120   0.163   0.8708    \nsexmale              9.839      9.868   0.997   0.3220    \nsexnone            -38.067     17.560  -2.168   0.0334 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 34 on 74 degrees of freedom\nMultiple R-squared:  0.1137,    Adjusted R-squared:  0.07781 \nF-statistic: 3.166 on 3 and 74 DF,  p-value: 0.02937\n\n## placeholderが . ではなく _ になっていることに注意\nstarwars |> lm(height ~ sex, data = _)\n\n\nCall:\nlm(formula = height ~ sex, data = starwars)\n\nCoefficients:\n      (Intercept)  sexhermaphroditic            sexmale            sexnone  \n          169.267              5.733              9.839            -38.067  \n\nstarwars |> lm(height ~ sex, data = _) %>% summary()\n\n\nCall:\nlm(formula = height ~ sex, data = starwars)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-113.105   -6.896    1.895   13.895   84.895 \n\nCoefficients:\n                  Estimate Std. Error t value Pr(>|t|)    \n(Intercept)        169.267      8.780  19.279   <2e-16 ***\nsexhermaphroditic    5.733     35.120   0.163   0.8708    \nsexmale              9.839      9.868   0.997   0.3220    \nsexnone            -38.067     17.560  -2.168   0.0334 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 34 on 74 degrees of freedom\n  (9 observations deleted due to missingness)\nMultiple R-squared:  0.1137,    Adjusted R-squared:  0.07781 \nF-statistic: 3.166 on 3 and 74 DF,  p-value: 0.02937\n\nstarwars |>\n  drop_na(height, sex) |> \n  lm(height ~ sex, data = _) |>\n  summary()\n\n\nCall:\nlm(formula = height ~ sex, data = drop_na(starwars, height, sex))\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-113.105   -6.896    1.895   13.895   84.895 \n\nCoefficients:\n                  Estimate Std. Error t value Pr(>|t|)    \n(Intercept)        169.267      8.780  19.279   <2e-16 ***\nsexhermaphroditic    5.733     35.120   0.163   0.8708    \nsexmale              9.839      9.868   0.997   0.3220    \nsexnone            -38.067     17.560  -2.168   0.0334 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 34 on 74 degrees of freedom\nMultiple R-squared:  0.1137,    Adjusted R-squared:  0.07781 \nF-statistic: 3.166 on 3 and 74 DF,  p-value: 0.02937\n\n# データそのものではなくそのデータの変数を使用する場合\nstarwars$height %>% mean(na.rm = TRUE)\n\n[1] 174.358\n\nstarwars %>% .$height %>% mean(na.rm = TRUE)\n\n[1] 174.358\n\nstarwars$height |> mean(na.rm = TRUE)\n\n[1] 174.358\n\nstarwars |> _$height |> mean(na.rm = TRUE)\n\n[1] 174.358\n\nstarwars |> pull(height) |> mean(na.rm = TRUE)\n\n[1] 174.358\n\n# 応用\nstarwars %>% \n  filter(sex == \"male\") %>% \n  summarise(Mean = mean(height, na.rm = TRUE),\n            SD = sd(height, na.rm = TRUE),\n            n = sum(!is.na(height)),\n            ll = Mean + qt(0.025, n-1) * SD / sqrt(n),\n            ul = Mean + qt(0.975, n-1) * SD / sqrt(n)\n  )\n\n# A tibble: 1 × 5\n   Mean    SD     n    ll    ul\n  <dbl> <dbl> <int> <dbl> <dbl>\n1  179.  36.0    57  170.  189.\n\nstarwars %>% \n  filter(sex == \"female\") %>% \n  summarise(Mean = mean(height, na.rm = TRUE),\n            SD = sd(height, na.rm = TRUE),\n            n = sum(!is.na(height)),\n            ll = Mean + qt(0.025, n-1) * SD / sqrt(n),\n            ul = Mean + qt(0.975, n-1) * SD / sqrt(n)\n  )\n\n# A tibble: 1 × 5\n   Mean    SD     n    ll    ul\n  <dbl> <dbl> <int> <dbl> <dbl>\n1  169.  15.3    15  161.  178.\n\nstarwars |>\n  filter(sex == \"female\") |>\n  summarise(Mean = mean(height, na.rm = TRUE),\n            SD = sd(height, na.rm = TRUE),\n            n = sum(!is.na(height)),\n            ll = Mean + qt(0.025, n-1) * SD / sqrt(n),\n            ul = Mean + qt(0.975, n-1) * SD / sqrt(n)\n  )\n\n# A tibble: 1 × 5\n   Mean    SD     n    ll    ul\n  <dbl> <dbl> <int> <dbl> <dbl>\n1  169.  15.3    15  161.  178.\n\n# 2つに適用\n1:100 %>% mean()\n\n[1] 50.5\n\n1:100 %>% mean\n\n[1] 50.5\n\n1:100 %>% {c(mean(.), sd(.))}\n\n[1] 50.50000 29.01149\n\n1:100 %>% {list(mean(.), sd(.))}\n\n[[1]]\n[1] 50.5\n\n[[2]]\n[1] 29.01149\n\nstarwars %>% .$height %>% {c(mean(.,na.rm = TRUE), sd(.,na.rm = TRUE))}\n\n[1] 174.35802  34.77043\n\n1:100 |> mean()\n\n[1] 50.5\n\n1:100 |> (\\(x) c(mean(x), sd(x)))()\n\n[1] 50.50000 29.01149\n\n1:100 |> (\\(x) list(mean(x), sd(x)))()\n\n[[1]]\n[1] 50.5\n\n[[2]]\n[1] 29.01149\n\nstarwars |> _$height |> (\\(x)(c(mean(x,na.rm = TRUE), sd(x,na.rm = TRUE))))()\n\n[1] 174.35802  34.77043\n\nquote(starwars |> _$height |> (\\(x)(c(mean(x,na.rm = TRUE), sd(x,na.rm = TRUE))))())\n\n(function(x) (c(mean(x, na.rm = TRUE), sd(x, na.rm = TRUE))))(starwars$height)"
  },
  {
    "objectID": "data.html",
    "href": "data.html",
    "title": "3  データの読み込み",
    "section": "",
    "text": "データの読み込みを行う際にreadrとhavenパッケージを用いる． readrパッケージのかわりにtidyverseパッケージを呼び出してもよい．"
  },
  {
    "objectID": "data.html#使用するデータ",
    "href": "data.html#使用するデータ",
    "title": "3  データの読み込み",
    "section": "3.1 使用するデータ",
    "text": "3.1 使用するデータ\n東京大学社会科学研究所附属社会調査・データアーカイブ研究センター（the Center for Social Research and Data Archives: CSRDA）で公開されている「東大社研・若年パネル調査（JLPS-Y）wave1，2007（非制限公開疑似データ）」（調査番号：u001，寄託者：東京大学社会科学研究所パネル調査プロジェクト）を用いる．\nhttps://csrda.iss.u-tokyo.ac.jp/infrastructure/urd/"
  },
  {
    "objectID": "data.html#データの保存先",
    "href": "data.html#データの保存先",
    "title": "3  データの読み込み",
    "section": "3.2 データの保存先",
    "text": "3.2 データの保存先\n\nR4SS：作業ディレクトリ\n\ndata：データを保存するフォルダ\n\nprocessed：加工したデータを保存するフォルダ\nraw：加工前の生データを保存するフォルダ\n\nu001_readme.docx\nu001.csv：csv形式のデータ\nu001.dta：dta形式のデータ（Stata）\nu001.sav：sav形式のデータ（SPSS）\nu001c.pdf：調査票\n\n\nscripts：Rスクリプトを保存するフォルダ\n\n\nMACの画面だと Figure 3.1 のようになる．Rの基礎でhere()関数とdir_create()関数を組み合わせて作成している．ここのrawというフォルダにu001.zipを展開した中身を保存する．u001というフォルダは使用しない（使用してもよいがファイルの場所を間違えないようにすること．本資料では，rawのすぐ下にデータがあるように設定している）．\n\n\n\n図 3.1： RStudioの画面"
  },
  {
    "objectID": "data.html#import-datasetからデータを読み込む",
    "href": "data.html#import-datasetからデータを読み込む",
    "title": "3  データの読み込み",
    "section": "3.3 Import Datasetからデータを読み込む",
    "text": "3.3 Import Datasetからデータを読み込む\nhereをつかったり，ファイルのパスを書くことに慣れないうちは，自分でファイルを探して指定する方法が確実かもしれない． まずcsvの場合は，「File」\\(\\rightarrow\\)「Import Dataset」\\(\\rightarrow\\)「From text (base)…」か「File」\\(\\rightarrow\\)「Import Dataset」\\(\\rightarrow\\)「From text (readr)…」を使用する．\n\n3.3.1 From text (base)…の場合\nu001.csvを指定し「Open」を選択すると， Figure 3.2 のような画面が現れる．「Heading」は「Yes」とする．\n\n\n\n図 3.2： From text (base)…の場合\n\n\n右下の「Data Frame」に正しくデータが表示されているようであれば，「Import」を選択する． するとデータがソース画面に表示される．うまく読み込まれていそうであればデータは閉じてしまおう． コンソールには読み込みに用いたコードが残されているので，これをコピーしておこう．\n\nu001 <- read.csv(\"~/GitHub/R4SS/data/raw/u001.csv\")\n\n\n\n3.3.2 From text (readr)…の場合\n右端の「Browse」からu001.csvを指定し「Open」を選択すると， Figure 3.3 のような画面が現れる．\n\n\n\n図 3.3： From text (readr)…の場合\n\n\nそのまま「Import」を選択すればよい．ここでもデータがソースの別のタブで開かれるが，不要なので確認したら閉じてしまおう．コンソールには次のプログラムが残っているので，スクリプトにコピーしておこう．\n\nlibrary(readr)\nu001 <- read_csv(\"data/raw/u001.csv\")\n\nRows: 1000 Columns: 72\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (72): caseid, sex, ybirth, mbirth, ZQ03, JC_1, JC_41, ZQ08A, ZQ08B, ZQ08...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nなおデフォルトではデータを代入するオブジェクトの名前はu001となっているが，コピーしたらdなど適当な分かりやすい名前に変更するとよい．"
  },
  {
    "objectID": "data.html#csvの場合",
    "href": "data.html#csvの場合",
    "title": "3  データの読み込み",
    "section": "3.4 csvの場合",
    "text": "3.4 csvの場合\nでは直接パスを書き，データを読み込んでみる．"
  },
  {
    "objectID": "data.html#read.csv",
    "href": "data.html#read.csv",
    "title": "3  データの読み込み",
    "section": "3.5 read.csv",
    "text": "3.5 read.csv\n\n# read.csvでcsvデータを読み込む\nd_csv_1 <- read.csv(\"data/raw/u001.csv\")\n# 確認\nhead(d_csv_1)\n\n  caseid sex ybirth mbirth ZQ03 JC_1 JC_41 ZQ08A ZQ08B ZQ08C ZQ08D ZQ08E ZQ08F\n1  10001   1   1976     10    1    2    12     4     1     3     4     4     4\n2  10002   1   1972      1    1    2     9     6     2     2     4     6     6\n3  10003   1   1975      4    1    2     9     6     6     6     3     6     6\n4  10004   2   1974     11    1    2     7     6     1     1     5     1     1\n5  10005   1   1978      1    2   10    88     6     2     2     4     1     2\n6  10006   1   1984      2    2   10    88     6     1     2     6     3     6\n  ZQ08G ZQ08H ZQ11_A ZQ11_B ZQ11_C ZQ11_D ZQ11_E ZQ11_F ZQ11_G ZQ11_H ZQ11_I\n1     5     3      2      2      2      2      2      2      2      2      2\n2     6     5      2      2      2      2      2      1      2      2      2\n3     4     6      2      2      2      2      1      1      1      2      2\n4     4     2      2      2      2      2      2      2      2      2      2\n5     5     1      2      2      2      2      1      2      2      2      2\n6     6     6      2      2      2      2      2      2      2      2      2\n  ZQ11_J ZQ11_K ZQ11_L ZQ11_M ZQ11_N ZQ11_O ZQ12 ZQ14_1A ZQ14_1B ZQ14_1C\n1      2      2      2      2      2      2    2       0       0       1\n2      2      2      2      2      2      2    2       0       0       0\n3      2      2      2      2      2      2    4       0       0       0\n4      2      2      2      2      2      2    3       1       1       0\n5      1      2      1      2      2      2    4       2       0       0\n6      1      2      2      2      1      2    2       0       0       1\n  ZQ14_1D ZQ23A ZQ23B ZQ23C ZQ23D ZQ24 ZQ25 ZQ26A ZQ26B ZQ26C ZQ26D ZQ26E ZQ26F\n1       0     5     5     5     4    1    1     4     5     3     5     3     4\n2       1     3     5     2     2    1    3     5     5     2     5     1     5\n3       0     3     2     2     2    1    3     5     5     4     5     3     5\n4       0     3     5     2     2    1    2     3     5     2     4     2     4\n5       0     5     8     5     5    1    2     3     3     4     3     3     4\n6       0     4     8     3     2    1    4     3     4     3     4     3     5\n  ZQ30D ZQ35 ZQ39A ZQ42 ZQ43 ZQ47A ZQ47B ZQ47C ZQ50 ZQ52A ZQ52Y ZQ54A ZQ54B\n1     2    4     4    9    2     6     5     8    2     2    51     1     2\n2     1    5     3    1    1     9     5    10    2     2    51     1     2\n3     1    4     5    9    4     6     3     6    2     2    56     3     5\n4     2    5     3    3    3     6     8     9    2     2    48     6     1\n5     4    5     4    2    2     1    99    99    1     8   888     8     8\n6     4    7     4    2    3     2    15    10    1     8   888     8     8\n  ZQ54C ZQ54D ZQ61_A ZQ61_B ZQ61_C ZQ61_D ZQ61_E ZQ61_F ZQ61_G ZQ61_H ZQ61_I\n1     9     9      1      2      2      2      2      2      2      2      2\n2     2     4      1      2      2      2      2      2      2      2      2\n3     3     2      1      2      2      2      2      2      2      2      2\n4     5     4      1      2      2      2      2      2      2      2      2\n5     8     8      2      2      2      1      2      2      2      2      2\n6     8     8      1      2      2      2      2      2      2      2      2\n  ZQ62\n1    3\n2    2\n3    2\n4    4\n5    1\n6    2\n\n# データのクラス\nclass(d_csv_1)\n\n[1] \"data.frame\"\n\n\nhereを使用すれば次のように書ける．\n\nd_csv_1 <- read.csv(here(\"data\",\"raw\",\"u001.csv\"))\n\n\n3.5.1 read_csv\n\n# read_csvでcsvデータを読み込む\nd_csv_2 <- read_csv(\"data/raw/u001.csv\")\n\nRows: 1000 Columns: 72\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (72): caseid, sex, ybirth, mbirth, ZQ03, JC_1, JC_41, ZQ08A, ZQ08B, ZQ08...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n# 確認\nhead(d_csv_2)\n\n# A tibble: 6 × 72\n  caseid   sex ybirth mbirth  ZQ03  JC_1 JC_41 ZQ08A ZQ08B ZQ08C ZQ08D ZQ08E\n   <dbl> <dbl>  <dbl>  <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n1  10001     1   1976     10     1     2    12     4     1     3     4     4\n2  10002     1   1972      1     1     2     9     6     2     2     4     6\n3  10003     1   1975      4     1     2     9     6     6     6     3     6\n4  10004     2   1974     11     1     2     7     6     1     1     5     1\n5  10005     1   1978      1     2    10    88     6     2     2     4     1\n6  10006     1   1984      2     2    10    88     6     1     2     6     3\n# ℹ 60 more variables: ZQ08F <dbl>, ZQ08G <dbl>, ZQ08H <dbl>, ZQ11_A <dbl>,\n#   ZQ11_B <dbl>, ZQ11_C <dbl>, ZQ11_D <dbl>, ZQ11_E <dbl>, ZQ11_F <dbl>,\n#   ZQ11_G <dbl>, ZQ11_H <dbl>, ZQ11_I <dbl>, ZQ11_J <dbl>, ZQ11_K <dbl>,\n#   ZQ11_L <dbl>, ZQ11_M <dbl>, ZQ11_N <dbl>, ZQ11_O <dbl>, ZQ12 <dbl>,\n#   ZQ14_1A <dbl>, ZQ14_1B <dbl>, ZQ14_1C <dbl>, ZQ14_1D <dbl>, ZQ23A <dbl>,\n#   ZQ23B <dbl>, ZQ23C <dbl>, ZQ23D <dbl>, ZQ24 <dbl>, ZQ25 <dbl>, ZQ26A <dbl>,\n#   ZQ26B <dbl>, ZQ26C <dbl>, ZQ26D <dbl>, ZQ26E <dbl>, ZQ26F <dbl>, …\n\n# データのクラス\nclass(d_csv_2)\n\n[1] \"spec_tbl_df\" \"tbl_df\"      \"tbl\"         \"data.frame\" \n\n\nhereを使用すれば次のように書ける．\n\nd_csv_2 <- read_csv(here(\"data\",\"raw\",\"u001.csv\"))\n\nRows: 1000 Columns: 72\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (72): caseid, sex, ybirth, mbirth, ZQ03, JC_1, JC_41, ZQ08A, ZQ08B, ZQ08...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "data.html#dta-stata-の場合",
    "href": "data.html#dta-stata-の場合",
    "title": "3  データの読み込み",
    "section": "3.6 dta (Stata) の場合",
    "text": "3.6 dta (Stata) の場合\n\n# read_dtaでdtaデータを読み込む\nd_dta <- read_dta(\"data/raw/u001.dta\")\n# 確認\nhead(d_dta)\n\n# A tibble: 6 × 72\n  caseid sex     ybirth mbirth ZQ03    JC_1     JC_41    ZQ08A   ZQ08B   ZQ08C  \n   <dbl> <dbl+l>  <dbl>  <dbl> <dbl+l> <dbl+lb> <dbl+lb> <dbl+l> <dbl+l> <dbl+l>\n1  10001 1 [mal…   1976     10 1 [し…  2 [正… 12     … 4 [週… 1 [毎… 3 [週…\n2  10002 1 [mal…   1972      1 1 [し…  2 [正…  9     … 6 [ほ… 2 [週… 2 [週…\n3  10003 1 [mal…   1975      4 1 [し…  2 [正…  9     … 6 [ほ… 6 [ほ… 6 [ほ…\n4  10004 2 [fem…   1974     11 1 [し…  2 [正…  7     … 6 [ほ… 1 [毎… 1 [毎…\n5  10005 1 [mal…   1978      1 2 [し… 10 [無… 88 [非… 6 [ほ… 2 [週… 2 [週…\n6  10006 1 [mal…   1984      2 2 [し… 10 [無… 88 [非… 6 [ほ… 1 [毎… 2 [週…\n# ℹ 62 more variables: ZQ08D <dbl+lbl>, ZQ08E <dbl+lbl>, ZQ08F <dbl+lbl>,\n#   ZQ08G <dbl+lbl>, ZQ08H <dbl+lbl>, ZQ11_A <dbl+lbl>, ZQ11_B <dbl+lbl>,\n#   ZQ11_C <dbl+lbl>, ZQ11_D <dbl+lbl>, ZQ11_E <dbl+lbl>, ZQ11_F <dbl+lbl>,\n#   ZQ11_G <dbl+lbl>, ZQ11_H <dbl+lbl>, ZQ11_I <dbl+lbl>, ZQ11_J <dbl+lbl>,\n#   ZQ11_K <dbl+lbl>, ZQ11_L <dbl+lbl>, ZQ11_M <dbl+lbl>, ZQ11_N <dbl+lbl>,\n#   ZQ11_O <dbl+lbl>, ZQ12 <dbl+lbl>, ZQ14_1A <dbl+lbl>, ZQ14_1B <dbl+lbl>,\n#   ZQ14_1C <dbl+lbl>, ZQ14_1D <dbl+lbl>, ZQ23A <dbl+lbl>, ZQ23B <dbl+lbl>, …\n\n# データのクラス\nclass(d_dta)\n\n[1] \"tbl_df\"     \"tbl\"        \"data.frame\"\n\n\nStataのファイルに含まれているラベルの情報も読み込まれる．hereを使用すれば次のように書ける．\n\nd_dta <- read_dta(here(\"data\",\"raw\",\"u001.dta\"))"
  },
  {
    "objectID": "data.html#sav-spss-の場合",
    "href": "data.html#sav-spss-の場合",
    "title": "3  データの読み込み",
    "section": "3.7 sav (SPSS) の場合",
    "text": "3.7 sav (SPSS) の場合\n\n# read_savでsavデータを読み込む\nd_sav <- read_sav(\"data/raw/u001.sav\")\n# 確認\nhead(d_sav)\n\n# A tibble: 6 × 72\n  caseid sex     ybirth mbirth ZQ03    JC_1     JC_41    ZQ08A   ZQ08B   ZQ08C  \n   <dbl> <dbl+l>  <dbl>  <dbl> <dbl+l> <dbl+lb> <dbl+lb> <dbl+l> <dbl+l> <dbl+l>\n1  10001 1 [mal…   1976     10 1 [し…  2 [正… 12     … 4 [週… 1 [毎… 3 [週…\n2  10002 1 [mal…   1972      1 1 [し…  2 [正…  9     … 6 [ほ… 2 [週… 2 [週…\n3  10003 1 [mal…   1975      4 1 [し…  2 [正…  9     … 6 [ほ… 6 [ほ… 6 [ほ…\n4  10004 2 [fem…   1974     11 1 [し…  2 [正…  7     … 6 [ほ… 1 [毎… 1 [毎…\n5  10005 1 [mal…   1978      1 2 [し… 10 [無… 88 [非… 6 [ほ… 2 [週… 2 [週…\n6  10006 1 [mal…   1984      2 2 [し… 10 [無… 88 [非… 6 [ほ… 1 [毎… 2 [週…\n# ℹ 62 more variables: ZQ08D <dbl+lbl>, ZQ08E <dbl+lbl>, ZQ08F <dbl+lbl>,\n#   ZQ08G <dbl+lbl>, ZQ08H <dbl+lbl>, ZQ11_A <dbl+lbl>, ZQ11_B <dbl+lbl>,\n#   ZQ11_C <dbl+lbl>, ZQ11_D <dbl+lbl>, ZQ11_E <dbl+lbl>, ZQ11_F <dbl+lbl>,\n#   ZQ11_G <dbl+lbl>, ZQ11_H <dbl+lbl>, ZQ11_I <dbl+lbl>, ZQ11_J <dbl+lbl>,\n#   ZQ11_K <dbl+lbl>, ZQ11_L <dbl+lbl>, ZQ11_M <dbl+lbl>, ZQ11_N <dbl+lbl>,\n#   ZQ11_O <dbl+lbl>, ZQ12 <dbl+lbl>, ZQ14_1A <dbl+lbl>, ZQ14_1B <dbl+lbl>,\n#   ZQ14_1C <dbl+lbl>, ZQ14_1D <dbl+lbl>, ZQ23A <dbl+lbl>, ZQ23B <dbl+lbl>, …\n\n# データのクラス\nclass(d_sav)\n\n[1] \"tbl_df\"     \"tbl\"        \"data.frame\"\n\n\nStataと同様にSPSSのファイルに含まれているラベルの情報も読み込まれる． hereを使用すれば次のように書ける．\n\nd_sav <- read_sav(here(\"data\",\"raw\",\"u001.sav\"))"
  },
  {
    "objectID": "data.html#ラベルを取り除きたい",
    "href": "data.html#ラベルを取り除きたい",
    "title": "3  データの読み込み",
    "section": "3.8 ラベルを取り除きたい",
    "text": "3.8 ラベルを取り除きたい\nラベルを取り除きたい場合は，zap_label()関数やzap_labels()関数を用いる．\n\nzap_label()：変数ラベルを取り除く\nzap_labels()：値ラベルを取り除く\n\n以下では，d_savにzap_label()関数とzap_labels()関数を適用し，変数ラベルと値ラベルを取り除き，d_sav_nolabという新しいオブジェクトとして保存している．\n\nd_sav_nolab <- d_sav |> zap_label() |> zap_labels()\nd_sav_nolab\n\n# A tibble: 1,000 × 72\n   caseid   sex ybirth mbirth  ZQ03  JC_1 JC_41 ZQ08A ZQ08B ZQ08C ZQ08D ZQ08E\n    <dbl> <dbl>  <dbl>  <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n 1  10001     1   1976     10     1     2    12     4     1     3     4     4\n 2  10002     1   1972      1     1     2     9     6     2     2     4     6\n 3  10003     1   1975      4     1     2     9     6     6     6     3     6\n 4  10004     2   1974     11     1     2     7     6     1     1     5     1\n 5  10005     1   1978      1     2    10    88     6     2     2     4     1\n 6  10006     1   1984      2     2    10    88     6     1     2     6     3\n 7  10007     2   1976      6     1     2     8     6     4     1     5     1\n 8  10008     1   1975      4     1     2     9     5     2     2     4     4\n 9  10009     2   1985      9     1     3     5     1     1     1     4     1\n10  10010     1   1972      2     1     2     8     6     1     2     5     6\n# ℹ 990 more rows\n# ℹ 60 more variables: ZQ08F <dbl>, ZQ08G <dbl>, ZQ08H <dbl>, ZQ11_A <dbl>,\n#   ZQ11_B <dbl>, ZQ11_C <dbl>, ZQ11_D <dbl>, ZQ11_E <dbl>, ZQ11_F <dbl>,\n#   ZQ11_G <dbl>, ZQ11_H <dbl>, ZQ11_I <dbl>, ZQ11_J <dbl>, ZQ11_K <dbl>,\n#   ZQ11_L <dbl>, ZQ11_M <dbl>, ZQ11_N <dbl>, ZQ11_O <dbl>, ZQ12 <dbl>,\n#   ZQ14_1A <dbl>, ZQ14_1B <dbl>, ZQ14_1C <dbl>, ZQ14_1D <dbl>, ZQ23A <dbl>,\n#   ZQ23B <dbl>, ZQ23C <dbl>, ZQ23D <dbl>, ZQ24 <dbl>, ZQ25 <dbl>, …"
  },
  {
    "objectID": "variables.html",
    "href": "variables.html",
    "title": "4  変数へのアクセス",
    "section": "",
    "text": "# パッケージの呼び出し\npacman::p_load(tidyverse,\n               haven,\n               janitor,\n               here)\n# データの読み込み\nd <- read_dta(here(\"data\",\"raw\",\"u001.dta\"))\n# A tibble: 1,000 × 72と表示されており，1 これはデータが1000行72列から構成されていることを示している． これは社会調査の場合，1000のケース（対象者）と72の変数からなるデータであることを意味する．\nでは変数のひとつである出生年ybirthについてみていきたい．dというデータの中に，ybirthという変数はあるが，ybirthとそのまま入力してもobject 'ybirth' not foundといったエラーがでてくる．\nこれはybirthという変数はdというデータの中にあるからである． データの中の変数にアクセスするためにはデータ名$変数名のようにする．"
  },
  {
    "objectID": "variables.html#新しい変数の作成",
    "href": "variables.html#新しい変数の作成",
    "title": "4  変数へのアクセス",
    "section": "5.1 新しい変数の作成",
    "text": "5.1 新しい変数の作成\n\nd |> mutate(age_2006 = 2006 - ybirth)\n\n# A tibble: 1,000 × 73\n   caseid sex        ybirth mbirth ZQ03        JC_1     JC_41    ZQ08A   ZQ08B  \n    <dbl> <dbl+lbl>   <dbl>  <dbl> <dbl+lbl>   <dbl+lb> <dbl+lb> <dbl+l> <dbl+l>\n 1  10001 1 [male]     1976     10 1 [してい…  2 [正… 12     … 4 [週… 1 [毎…\n 2  10002 1 [male]     1972      1 1 [してい…  2 [正…  9     … 6 [ほ… 2 [週…\n 3  10003 1 [male]     1975      4 1 [してい…  2 [正…  9     … 6 [ほ… 6 [ほ…\n 4  10004 2 [female]   1974     11 1 [してい…  2 [正…  7     … 6 [ほ… 1 [毎…\n 5  10005 1 [male]     1978      1 2 [してい… 10 [無… 88 [非… 6 [ほ… 2 [週…\n 6  10006 1 [male]     1984      2 2 [してい… 10 [無… 88 [非… 6 [ほ… 1 [毎…\n 7  10007 2 [female]   1976      6 1 [してい…  2 [正…  8     … 6 [ほ… 4 [週…\n 8  10008 1 [male]     1975      4 1 [してい…  2 [正…  9     … 5 [月… 2 [週…\n 9  10009 2 [female]   1985      9 1 [してい…  3 [パ…  5     … 1 [毎… 1 [毎…\n10  10010 1 [male]     1972      2 1 [してい…  2 [正…  8     … 6 [ほ… 1 [毎…\n# ℹ 990 more rows\n# ℹ 64 more variables: ZQ08C <dbl+lbl>, ZQ08D <dbl+lbl>, ZQ08E <dbl+lbl>,\n#   ZQ08F <dbl+lbl>, ZQ08G <dbl+lbl>, ZQ08H <dbl+lbl>, ZQ11_A <dbl+lbl>,\n#   ZQ11_B <dbl+lbl>, ZQ11_C <dbl+lbl>, ZQ11_D <dbl+lbl>, ZQ11_E <dbl+lbl>,\n#   ZQ11_F <dbl+lbl>, ZQ11_G <dbl+lbl>, ZQ11_H <dbl+lbl>, ZQ11_I <dbl+lbl>,\n#   ZQ11_J <dbl+lbl>, ZQ11_K <dbl+lbl>, ZQ11_L <dbl+lbl>, ZQ11_M <dbl+lbl>,\n#   ZQ11_N <dbl+lbl>, ZQ11_O <dbl+lbl>, ZQ12 <dbl+lbl>, ZQ14_1A <dbl+lbl>, …\n\nd |> mutate(age_2006 = 2006 - ybirth, .before = 1)\n\n# A tibble: 1,000 × 73\n   age_2006 caseid sex        ybirth mbirth ZQ03       JC_1     JC_41    ZQ08A  \n      <dbl>  <dbl> <dbl+lbl>   <dbl>  <dbl> <dbl+lbl>  <dbl+lb> <dbl+lb> <dbl+l>\n 1       30  10001 1 [male]     1976     10 1 [してい…  2 [正… 12     … 4 [週…\n 2       34  10002 1 [male]     1972      1 1 [してい…  2 [正…  9     … 6 [ほ…\n 3       31  10003 1 [male]     1975      4 1 [してい…  2 [正…  9     … 6 [ほ…\n 4       32  10004 2 [female]   1974     11 1 [してい…  2 [正…  7     … 6 [ほ…\n 5       28  10005 1 [male]     1978      1 2 [してい… 10 [無… 88 [非… 6 [ほ…\n 6       22  10006 1 [male]     1984      2 2 [してい… 10 [無… 88 [非… 6 [ほ…\n 7       30  10007 2 [female]   1976      6 1 [してい…  2 [正…  8     … 6 [ほ…\n 8       31  10008 1 [male]     1975      4 1 [してい…  2 [正…  9     … 5 [月…\n 9       21  10009 2 [female]   1985      9 1 [してい…  3 [パ…  5     … 1 [毎…\n10       34  10010 1 [male]     1972      2 1 [してい…  2 [正…  8     … 6 [ほ…\n# ℹ 990 more rows\n# ℹ 64 more variables: ZQ08B <dbl+lbl>, ZQ08C <dbl+lbl>, ZQ08D <dbl+lbl>,\n#   ZQ08E <dbl+lbl>, ZQ08F <dbl+lbl>, ZQ08G <dbl+lbl>, ZQ08H <dbl+lbl>,\n#   ZQ11_A <dbl+lbl>, ZQ11_B <dbl+lbl>, ZQ11_C <dbl+lbl>, ZQ11_D <dbl+lbl>,\n#   ZQ11_E <dbl+lbl>, ZQ11_F <dbl+lbl>, ZQ11_G <dbl+lbl>, ZQ11_H <dbl+lbl>,\n#   ZQ11_I <dbl+lbl>, ZQ11_J <dbl+lbl>, ZQ11_K <dbl+lbl>, ZQ11_L <dbl+lbl>,\n#   ZQ11_M <dbl+lbl>, ZQ11_N <dbl+lbl>, ZQ11_O <dbl+lbl>, ZQ12 <dbl+lbl>, …\n\nd <- d |> mutate(age_2006 = 2006 - ybirth)\nd |> count(ybirth, age_2006)\n\n# A tibble: 15 × 3\n   ybirth age_2006     n\n    <dbl>    <dbl> <int>\n 1   1972       34    70\n 2   1973       33    81\n 3   1974       32    82\n 4   1975       31    70\n 5   1976       30    76\n 6   1977       29    84\n 7   1978       28    53\n 8   1979       27    54\n 9   1980       26    48\n10   1981       25    70\n11   1982       24    44\n12   1983       23    67\n13   1984       22    67\n14   1985       21    64\n15   1986       20    70"
  },
  {
    "objectID": "variables.html#変数の選択",
    "href": "variables.html#変数の選択",
    "title": "4  変数へのアクセス",
    "section": "5.2 変数の選択",
    "text": "5.2 変数の選択\n\nd |> select(ybirth)\n\n# A tibble: 1,000 × 1\n   ybirth\n    <dbl>\n 1   1976\n 2   1972\n 3   1975\n 4   1974\n 5   1978\n 6   1984\n 7   1976\n 8   1975\n 9   1985\n10   1972\n# ℹ 990 more rows"
  },
  {
    "objectID": "variables.html#変数をベクトルとして取り出す",
    "href": "variables.html#変数をベクトルとして取り出す",
    "title": "4  変数へのアクセス",
    "section": "5.3 変数をベクトルとして取り出す",
    "text": "5.3 変数をベクトルとして取り出す\n\nd |> pull(ybirth)\n\n   [1] 1976 1972 1975 1974 1978 1984 1976 1975 1985 1972 1974 1973 1984 1972\n  [15] 1985 1982 1984 1980 1972 1978 1982 1978 1979 1975 1973 1975 1977 1973\n  [29] 1983 1976 1983 1977 1978 1978 1975 1986 1986 1975 1980 1981 1977 1984\n  [43] 1982 1976 1975 1978 1977 1979 1986 1984 1972 1983 1976 1974 1974 1985\n  [57] 1979 1986 1981 1986 1983 1980 1983 1981 1976 1978 1974 1977 1986 1985\n  [71] 1985 1977 1974 1976 1983 1985 1973 1986 1973 1982 1980 1973 1983 1980\n  [85] 1983 1979 1974 1972 1979 1985 1976 1973 1985 1985 1973 1978 1975 1983\n  [99] 1980 1981 1979 1981 1982 1972 1980 1973 1976 1980 1984 1985 1979 1986\n [113] 1975 1986 1983 1974 1979 1972 1981 1974 1973 1980 1980 1981 1973 1972\n [127] 1980 1978 1980 1972 1984 1972 1982 1978 1977 1972 1984 1985 1983 1974\n [141] 1979 1984 1974 1983 1976 1976 1977 1984 1974 1976 1972 1986 1980 1981\n [155] 1975 1973 1986 1975 1981 1985 1983 1984 1983 1974 1980 1981 1976 1977\n [169] 1973 1974 1982 1973 1972 1983 1978 1974 1985 1976 1977 1983 1977 1973\n [183] 1982 1972 1983 1978 1972 1975 1974 1985 1974 1981 1974 1974 1986 1980\n [197] 1974 1977 1973 1979 1986 1979 1977 1976 1975 1985 1978 1975 1973 1978\n [211] 1976 1984 1974 1977 1973 1980 1976 1981 1977 1986 1981 1986 1981 1978\n [225] 1979 1972 1984 1973 1977 1981 1979 1979 1984 1984 1973 1973 1977 1973\n [239] 1972 1978 1977 1981 1984 1981 1972 1981 1976 1977 1985 1986 1983 1981\n [253] 1985 1973 1976 1978 1977 1981 1973 1981 1978 1976 1972 1973 1981 1972\n [267] 1980 1975 1976 1973 1983 1974 1973 1985 1980 1976 1983 1983 1984 1985\n [281] 1975 1983 1981 1972 1986 1984 1972 1972 1984 1981 1974 1984 1979 1974\n [295] 1984 1972 1974 1978 1985 1972 1986 1976 1973 1977 1975 1983 1978 1976\n [309] 1978 1976 1979 1976 1976 1973 1982 1982 1973 1986 1974 1986 1975 1976\n [323] 1976 1979 1981 1981 1977 1985 1976 1972 1975 1976 1980 1981 1979 1973\n [337] 1978 1974 1975 1984 1976 1973 1981 1981 1979 1973 1981 1978 1975 1977\n [351] 1976 1975 1976 1986 1986 1986 1979 1985 1978 1974 1980 1978 1976 1975\n [365] 1984 1983 1979 1985 1985 1984 1981 1976 1974 1981 1983 1973 1977 1975\n [379] 1977 1986 1973 1976 1972 1981 1985 1985 1981 1981 1980 1984 1975 1974\n [393] 1986 1979 1974 1977 1975 1983 1977 1982 1975 1986 1983 1975 1986 1981\n [407] 1974 1983 1972 1985 1980 1979 1976 1974 1977 1972 1985 1975 1979 1980\n [421] 1986 1978 1976 1980 1974 1985 1976 1977 1977 1980 1977 1984 1981 1983\n [435] 1982 1983 1981 1974 1980 1983 1975 1983 1972 1985 1980 1981 1972 1985\n [449] 1981 1977 1976 1976 1984 1976 1972 1983 1986 1983 1976 1981 1981 1983\n [463] 1976 1975 1982 1977 1975 1977 1983 1979 1974 1975 1984 1974 1972 1978\n [477] 1972 1984 1981 1972 1981 1974 1985 1972 1977 1972 1981 1977 1981 1977\n [491] 1975 1973 1978 1972 1973 1986 1985 1985 1972 1976 1979 1972 1972 1973\n [505] 1975 1973 1986 1980 1975 1975 1982 1986 1985 1979 1977 1981 1977 1978\n [519] 1980 1983 1983 1972 1984 1972 1983 1984 1979 1976 1986 1984 1978 1977\n [533] 1983 1974 1977 1973 1980 1980 1973 1982 1975 1974 1973 1977 1981 1972\n [547] 1974 1973 1983 1980 1977 1980 1973 1978 1984 1983 1986 1974 1985 1977\n [561] 1980 1983 1977 1984 1975 1973 1984 1977 1983 1982 1985 1980 1973 1977\n [575] 1973 1973 1979 1975 1982 1985 1982 1982 1977 1984 1974 1982 1978 1974\n [589] 1978 1986 1981 1978 1975 1975 1972 1973 1974 1986 1972 1985 1973 1975\n [603] 1981 1979 1975 1977 1976 1986 1977 1985 1974 1984 1976 1986 1985 1972\n [617] 1973 1972 1985 1976 1981 1986 1978 1974 1977 1980 1978 1977 1980 1982\n [631] 1974 1973 1979 1982 1982 1984 1973 1983 1982 1972 1975 1974 1975 1979\n [645] 1974 1986 1986 1972 1984 1972 1980 1973 1985 1986 1972 1984 1974 1976\n [659] 1984 1972 1985 1977 1976 1976 1982 1986 1985 1984 1986 1984 1985 1972\n [673] 1979 1982 1982 1978 1973 1984 1976 1974 1976 1984 1975 1972 1975 1972\n [687] 1978 1981 1976 1979 1978 1975 1976 1976 1985 1984 1974 1973 1977 1985\n [701] 1979 1972 1975 1976 1974 1973 1976 1972 1975 1975 1975 1979 1975 1983\n [715] 1977 1979 1977 1981 1983 1986 1986 1982 1983 1973 1975 1977 1976 1983\n [729] 1972 1974 1985 1977 1975 1976 1977 1977 1977 1984 1981 1984 1977 1973\n [743] 1976 1984 1972 1982 1980 1977 1981 1986 1974 1984 1982 1973 1978 1978\n [757] 1983 1981 1974 1982 1974 1972 1975 1981 1979 1979 1979 1975 1975 1981\n [771] 1974 1979 1974 1985 1974 1984 1981 1980 1976 1979 1974 1974 1983 1982\n [785] 1985 1973 1974 1975 1981 1975 1974 1983 1974 1972 1974 1973 1972 1985\n [799] 1974 1973 1974 1985 1973 1978 1986 1977 1979 1975 1973 1973 1980 1975\n [813] 1976 1976 1975 1972 1977 1972 1977 1986 1978 1973 1985 1979 1974 1986\n [827] 1983 1982 1982 1986 1973 1976 1981 1981 1978 1978 1975 1986 1981 1972\n [841] 1976 1978 1986 1983 1973 1973 1976 1982 1982 1977 1977 1978 1984 1977\n [855] 1975 1979 1984 1975 1974 1984 1984 1978 1981 1979 1977 1985 1977 1976\n [869] 1976 1974 1977 1985 1986 1973 1979 1979 1981 1976 1982 1974 1978 1984\n [883] 1979 1980 1977 1985 1984 1979 1983 1983 1981 1981 1982 1974 1986 1986\n [897] 1984 1982 1980 1986 1973 1974 1974 1974 1985 1984 1976 1976 1979 1977\n [911] 1984 1982 1982 1981 1983 1980 1978 1979 1986 1983 1984 1973 1984 1986\n [925] 1976 1975 1978 1980 1986 1986 1977 1977 1977 1977 1973 1984 1973 1986\n [939] 1972 1986 1974 1980 1983 1978 1982 1983 1985 1984 1973 1977 1977 1981\n [953] 1978 1986 1980 1986 1986 1982 1984 1983 1983 1985 1980 1975 1985 1986\n [967] 1983 1974 1984 1973 1983 1975 1979 1986 1977 1983 1977 1973 1974 1977\n [981] 1985 1986 1977 1983 1984 1985 1973 1972 1979 1982 1974 1973 1974 1985\n [995] 1973 1986 1981 1972 1976 1983\nattr(,\"label\")\n[1] \"問1(2)_生年\"\nattr(,\"format.stata\")\n[1] \"%12.0g\""
  },
  {
    "objectID": "variables.html#ケースの選択",
    "href": "variables.html#ケースの選択",
    "title": "4  変数へのアクセス",
    "section": "5.4 ケースの選択",
    "text": "5.4 ケースの選択\n\nd |> filter(ybirth == 1981)\n\n# A tibble: 70 × 73\n   caseid sex        ybirth mbirth ZQ03        JC_1     JC_41    ZQ08A   ZQ08B  \n    <dbl> <dbl+lbl>   <dbl>  <dbl> <dbl+lbl>   <dbl+lb> <dbl+lb> <dbl+l> <dbl+l>\n 1  10040 1 [male]     1981      9 1 [してい…  2 [正… 12     … 4 [週… 1 [毎…\n 2  10059 1 [male]     1981      1 1 [してい…  2 [正… 10     … 5 [月… 1 [毎…\n 3  10064 1 [male]     1981      2 1 [してい… 12 [学…  1     … 5 [月… 1 [毎…\n 4  10100 2 [female]   1981     10 2 [してい… 10 [無… 88 [非… 6 [ほ… 1 [毎…\n 5  10102 2 [female]   1981      6 1 [してい…  3 [パ…  8     … 6 [ほ… 3 [週…\n 6  10119 2 [female]   1981      6 1 [してい…  3 [パ…  8     … 6 [ほ… 1 [毎…\n 7  10124 1 [male]     1981      7 2 [してい… 11 [学… 88 [非… 6 [ほ… 1 [毎…\n 8  10154 2 [female]   1981     11 1 [してい…  4 [派…  7     … 6 [ほ… 9 [無…\n 9  10159 2 [female]   1981      3 1 [してい…  2 [正…  8     … 6 [ほ… 1 [毎…\n10  10166 2 [female]   1981      6 1 [してい…  2 [正… 10     … 6 [ほ… 1 [毎…\n# ℹ 60 more rows\n# ℹ 64 more variables: ZQ08C <dbl+lbl>, ZQ08D <dbl+lbl>, ZQ08E <dbl+lbl>,\n#   ZQ08F <dbl+lbl>, ZQ08G <dbl+lbl>, ZQ08H <dbl+lbl>, ZQ11_A <dbl+lbl>,\n#   ZQ11_B <dbl+lbl>, ZQ11_C <dbl+lbl>, ZQ11_D <dbl+lbl>, ZQ11_E <dbl+lbl>,\n#   ZQ11_F <dbl+lbl>, ZQ11_G <dbl+lbl>, ZQ11_H <dbl+lbl>, ZQ11_I <dbl+lbl>,\n#   ZQ11_J <dbl+lbl>, ZQ11_K <dbl+lbl>, ZQ11_L <dbl+lbl>, ZQ11_M <dbl+lbl>,\n#   ZQ11_N <dbl+lbl>, ZQ11_O <dbl+lbl>, ZQ12 <dbl+lbl>, ZQ14_1A <dbl+lbl>, …"
  },
  {
    "objectID": "quarto.html",
    "href": "quarto.html",
    "title": "6  Quarto",
    "section": "",
    "text": "Quartoによって本文とコードを一緒に扱うことができ，きれいなレポート，報告書，そして最終的には論文を執筆することができる．\n以下の説明で基本的なことが理解できたら Quartoのページ を確認するとよい．細かな設定をすることで自分好みの自分好みの出力が可能となる．\nファイルの拡張子は.qmdとなる．ある程度ファイルに入力したら，Renderをクリックして実行する（自動的にファイルは上書き保存される）．するとHTMLファイルが作成される．\n\n\n\n\n\n\nヒント\n\n\n\nブラウザではなくRStudioの画面内で結果を表示させたい場合は，Renderの右の設定からPreview in Viewer Paneを選択し，Renderをクリックして実行する． もとに戻したい場合はPreview in Windowを選択する．"
  },
  {
    "objectID": "quarto.html#yaml-headerの設定",
    "href": "quarto.html#yaml-headerの設定",
    "title": "6  Quarto",
    "section": "6.2 YAML headerの設定",
    "text": "6.2 YAML headerの設定\n一番上の部分（YAML headerと呼ばれ，YAMLはプログラミング言語であり，設定ファイルの記述のためによく用いられている）はまずは次のように設定しておく．これによって結果がHTMLで出力される．今回はオプションは最小限にし，目次だけが表示される設定にしている．\n---\ntitle: \"Intro Quarto\"\nauthor: \"Sho Fujihara\"\nformat:\n  html:\n    toc: true\n---\nなお「教育調査分析法（第1回）」という授業の配布資料では次のような設定にしている．\n---\ntitle: \"教育調査分析法（第1回）\"\nauthor: \"藤原翔\"\nformat:\n  html:\n    toc: true\n    embed-resources: true\n    standalone: true\n    scrollable: true\n    number-sections: true\n    page-layout: full\ncrossref:\n  fig-title: Figure     # (default is \"Figure\")\n  tbl-title: Table     # (default is \"Table\")\n  title-delim: \":\"     # (default is \":\")\nexecute:\n  cache: true\n  warning: false\n  message: false\n  echo: false\ndate: \"2023-05-10\"\neditor: source\n---"
  },
  {
    "objectID": "quarto.html#セクション",
    "href": "quarto.html#セクション",
    "title": "6  Quarto",
    "section": "6.3 セクション",
    "text": "6.3 セクション\nセクションについては# セクション名（ハッシュ1つ）を使用する． サブセクションについては## サブセクション名（ハッシュ2つを）を使用する． サブサブセクションについては### サブサブセクション名（ハッシュ3つを）を使用する．"
  },
  {
    "objectID": "quarto.html#コメントアウト",
    "href": "quarto.html#コメントアウト",
    "title": "6  Quarto",
    "section": "6.4 コメントアウト",
    "text": "6.4 コメントアウト\n通常のRのスクリプトで用いていた#は，qmdファイルの本文中で使用すると，セクションになってしまう．次のように<!--と-->でコメントを囲めばよい．\n<!-- \nここにコメントを書く．\n-->"
  },
  {
    "objectID": "quarto.html#箇条書き",
    "href": "quarto.html#箇条書き",
    "title": "6  Quarto",
    "section": "6.5 箇条書き",
    "text": "6.5 箇条書き\n箇条書きには-を用いる．\n- 1つ目\n- 2つ目\n   - 2つ目の1つ目\n   - 2つ目の2つ目\n- 3つ目\n   - 3つ目の1つ目 \n   - 3つ目の2つ目 \n\n1つ目\n2つ目\n\n2つ目の1つ目\n\n3つ目\n\n3つ目の1つ目\n3つ目の2つ目"
  },
  {
    "objectID": "quarto.html#数式",
    "href": "quarto.html#数式",
    "title": "6  Quarto",
    "section": "6.6 数式",
    "text": "6.6 数式\n\\(\\LaTeX\\)の記法によって美しい数式を書くこともできる．数式は$$で囲む．\n$$Y = b_0 + b_1X$$\n\n$$\\bar x = \\frac{1}{n}\\sum_{i=1}^n x_i$$\n\\[Y = b_0 + b_1X\\]\n\\[\\bar x = \\frac{1}{n}\\sum_{i=1}^n x_i\\]"
  },
  {
    "objectID": "quarto.html#コードチャンク",
    "href": "quarto.html#コードチャンク",
    "title": "6  Quarto",
    "section": "6.7 コードチャンク",
    "text": "6.7 コードチャンク\n```{r}と```の間にRのスクリプトや他の設定について入力する．たとえば1 + 2を計算したければ次のようにする．\n```{r}\n1 + 2\n```\nすると次のような結果が示される．\n\n1 + 2\n\n[1] 3\n\n\n結果だけを表示させたければ#| echo: falseをつける．#|によって\n```{r}\n#| echo: false\n1 + 2\n```\n\n\n[1] 3\n\n\nパッケージの呼び出しとデータの出力も同様に行う．\n```{r}\n# パッケージの呼び出し\nlibrary(tidyverse)\n# データの表示\nstarwars\n# 身長のヒストグラム\nstarwars |> ggplot(aes(x = height)) +\n  geom_histogram()\n```\nすると次のように表示される．\n\n# パッケージの呼び出し\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n\n# データの表示\nstarwars\n\n# A tibble: 87 × 14\n   name     height  mass hair_color skin_color eye_color birth_year sex   gender\n   <chr>     <int> <dbl> <chr>      <chr>      <chr>          <dbl> <chr> <chr> \n 1 Luke Sk…    172    77 blond      fair       blue            19   male  mascu…\n 2 C-3PO       167    75 <NA>       gold       yellow         112   none  mascu…\n 3 R2-D2        96    32 <NA>       white, bl… red             33   none  mascu…\n 4 Darth V…    202   136 none       white      yellow          41.9 male  mascu…\n 5 Leia Or…    150    49 brown      light      brown           19   fema… femin…\n 6 Owen La…    178   120 brown, gr… light      blue            52   male  mascu…\n 7 Beru Wh…    165    75 brown      light      blue            47   fema… femin…\n 8 R5-D4        97    32 <NA>       white, red red             NA   none  mascu…\n 9 Biggs D…    183    84 black      light      brown           24   male  mascu…\n10 Obi-Wan…    182    77 auburn, w… fair       blue-gray       57   male  mascu…\n# ℹ 77 more rows\n# ℹ 5 more variables: homeworld <chr>, species <chr>, films <list>,\n#   vehicles <list>, starships <list>\n\n# 身長のヒストグラム\nstarwars |> ggplot(aes(x = height)) +\n  geom_histogram()\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nWarning: Removed 6 rows containing non-finite values (`stat_bin()`)."
  },
  {
    "objectID": "quarto.html#段組み",
    "href": "quarto.html#段組み",
    "title": "6  Quarto",
    "section": "6.8 2段組み",
    "text": "6.8 2段組み\n次のように2段にわけて表示することもできる．#| eval: falseと#| echo: falseを使って，入力と出力をわけて示している．\n::: .column\n::: {.column width=\"48%\"}\n**入力**\n\n```{r}\n#| eval: false\nlibrary(tidyverse)\nlibrary(here)\nd <- read_csv(here(\"data\",\"raw\",\"u001.csv\"))\nd\n```\n:::\n\n\n::: {.column width=\"48%\"}\n**出力**\n\n```{r}\n#| echo: false\nlibrary(tidyverse)\nlibrary(here)\nd <- read_csv(here(\"data\",\"raw\",\"u001.csv\"))\nd\n```\n:::\n:::\n\n\n入力\n\nlibrary(tidyverse)\nlibrary(here)\nd <- read_csv(here(\"data\",\"raw\",\"u001.csv\"))\nd\n\n\n\n出力\n\n\nhere() starts at /Users/sf/GitHub/R4SS\n\n\nRows: 1000 Columns: 72\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (72): caseid, sex, ybirth, mbirth, ZQ03, JC_1, JC_41, ZQ08A, ZQ08B, ZQ08...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n# A tibble: 1,000 × 72\n   caseid   sex ybirth mbirth  ZQ03  JC_1 JC_41 ZQ08A ZQ08B ZQ08C ZQ08D ZQ08E\n    <dbl> <dbl>  <dbl>  <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n 1  10001     1   1976     10     1     2    12     4     1     3     4     4\n 2  10002     1   1972      1     1     2     9     6     2     2     4     6\n 3  10003     1   1975      4     1     2     9     6     6     6     3     6\n 4  10004     2   1974     11     1     2     7     6     1     1     5     1\n 5  10005     1   1978      1     2    10    88     6     2     2     4     1\n 6  10006     1   1984      2     2    10    88     6     1     2     6     3\n 7  10007     2   1976      6     1     2     8     6     4     1     5     1\n 8  10008     1   1975      4     1     2     9     5     2     2     4     4\n 9  10009     2   1985      9     1     3     5     1     1     1     4     1\n10  10010     1   1972      2     1     2     8     6     1     2     5     6\n# ℹ 990 more rows\n# ℹ 60 more variables: ZQ08F <dbl>, ZQ08G <dbl>, ZQ08H <dbl>, ZQ11_A <dbl>,\n#   ZQ11_B <dbl>, ZQ11_C <dbl>, ZQ11_D <dbl>, ZQ11_E <dbl>, ZQ11_F <dbl>,\n#   ZQ11_G <dbl>, ZQ11_H <dbl>, ZQ11_I <dbl>, ZQ11_J <dbl>, ZQ11_K <dbl>,\n#   ZQ11_L <dbl>, ZQ11_M <dbl>, ZQ11_N <dbl>, ZQ11_O <dbl>, ZQ12 <dbl>,\n#   ZQ14_1A <dbl>, ZQ14_1B <dbl>, ZQ14_1C <dbl>, ZQ14_1D <dbl>, ZQ23A <dbl>,\n#   ZQ23B <dbl>, ZQ23C <dbl>, ZQ23D <dbl>, ZQ24 <dbl>, ZQ25 <dbl>, …\n\n\n\n\n::: .column\n::: {.column width=\"48%\"}\n**図を描くためのスクリプト**\n\n```{r}\n#| eval: false\n# 身長のヒストグラム\nstarwars |> ggplot(aes(x = height)) +\n  geom_histogram()\n```\n:::\n\n::: {.column width=\"48%\"}\n**図の出力**\n\n```{r}\n#| echo: false\n#| label: fig-hist\n#| fig-cap: 身長のヒストグラム\n# 身長のヒストグラム\nstarwars |> ggplot(aes(x = height)) +\n  geom_histogram()\n```\n:::\n:::\n\n@fig-hist は身長のヒストグラムである．\n\n\n図を描くためのスクリプト\n\n# 身長のヒストグラム\nstarwars |> ggplot(aes(x = height)) +\n  geom_histogram()\n\n\n\n図の出力\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nWarning: Removed 6 rows containing non-finite values (`stat_bin()`).\n\n\n\n\n\n図 6.1： 身長のヒストグラム\n\n\n\n\n\n\nFigure 6.1 は身長のヒストグラムである．現在はFigure Xとなるように設定しているが，YAMLで変更可能である（図: Xや表: Xなど）．"
  },
  {
    "objectID": "quarto.html#パネルに分けて表示",
    "href": "quarto.html#パネルに分けて表示",
    "title": "6  Quarto",
    "section": "6.9 パネルに分けて表示",
    "text": "6.9 パネルに分けて表示\n:::{.panel-tabset}\n## 入力\n\n```{r}\n#| eval: false\nlibrary(tidyverse)\nlibrary(here)\nd <- read_csv(here(\"data\",\"raw\",\"u001.csv\"))\nd\n```\n\n## 出力\n\n```{r}\n#| echo: false\nlibrary(tidyverse)\nlibrary(here)\nd <- read_csv(here(\"data\",\"raw\",\"u001.csv\"))\nd\n```\n:::\n\n入力出力\n\n\n\nlibrary(tidyverse)\nlibrary(here)\nd <- read_csv(here(\"data\",\"raw\",\"u001.csv\"))\nd\n\n\n\n\n\nRows: 1000 Columns: 72\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (72): caseid, sex, ybirth, mbirth, ZQ03, JC_1, JC_41, ZQ08A, ZQ08B, ZQ08...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n# A tibble: 1,000 × 72\n   caseid   sex ybirth mbirth  ZQ03  JC_1 JC_41 ZQ08A ZQ08B ZQ08C ZQ08D ZQ08E\n    <dbl> <dbl>  <dbl>  <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n 1  10001     1   1976     10     1     2    12     4     1     3     4     4\n 2  10002     1   1972      1     1     2     9     6     2     2     4     6\n 3  10003     1   1975      4     1     2     9     6     6     6     3     6\n 4  10004     2   1974     11     1     2     7     6     1     1     5     1\n 5  10005     1   1978      1     2    10    88     6     2     2     4     1\n 6  10006     1   1984      2     2    10    88     6     1     2     6     3\n 7  10007     2   1976      6     1     2     8     6     4     1     5     1\n 8  10008     1   1975      4     1     2     9     5     2     2     4     4\n 9  10009     2   1985      9     1     3     5     1     1     1     4     1\n10  10010     1   1972      2     1     2     8     6     1     2     5     6\n# ℹ 990 more rows\n# ℹ 60 more variables: ZQ08F <dbl>, ZQ08G <dbl>, ZQ08H <dbl>, ZQ11_A <dbl>,\n#   ZQ11_B <dbl>, ZQ11_C <dbl>, ZQ11_D <dbl>, ZQ11_E <dbl>, ZQ11_F <dbl>,\n#   ZQ11_G <dbl>, ZQ11_H <dbl>, ZQ11_I <dbl>, ZQ11_J <dbl>, ZQ11_K <dbl>,\n#   ZQ11_L <dbl>, ZQ11_M <dbl>, ZQ11_N <dbl>, ZQ11_O <dbl>, ZQ12 <dbl>,\n#   ZQ14_1A <dbl>, ZQ14_1B <dbl>, ZQ14_1C <dbl>, ZQ14_1D <dbl>, ZQ23A <dbl>,\n#   ZQ23B <dbl>, ZQ23C <dbl>, ZQ23D <dbl>, ZQ24 <dbl>, ZQ25 <dbl>, …"
  },
  {
    "objectID": "quarto.html#参考文献",
    "href": "quarto.html#参考文献",
    "title": "6  Quarto",
    "section": "6.10 参考文献",
    "text": "6.10 参考文献\nZoteroなどの文献管理アプリを通じてbibファイルを作成し，引用する．\n@knuth84とすれば Knuth (1984) となる． [@knuth84]とすれば (Knuth 1984) となる．\n\n\n\n\nKnuth, Donald E. 1984. “Literate Programming.” Comput. J. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97."
  },
  {
    "objectID": "tips.html",
    "href": "tips.html",
    "title": "7  その他メモ",
    "section": "",
    "text": "便利だが普段はあまりつかわないため忘れがちな点についてメモしておく． 本テキストのどこかで扱う内容もメモする．"
  },
  {
    "objectID": "tips.html#関数の中身を確認する",
    "href": "tips.html#関数の中身を確認する",
    "title": "7  その他メモ",
    "section": "7.8 関数の中身を確認する",
    "text": "7.8 関数の中身を確認する\nmean()関数がどのようにして作成されているのかを確認したい場合，meanのように()をとって入力すればよい．しかし，UseMethod(\"mean\")のように関数が表示され，中身を確認できない場合もある．\n\nmean\n\nfunction (x, ...) \nUseMethod(\"mean\")\n<bytecode: 0x1232d37c8>\n<environment: namespace:base>\n\n\nこのような場合は，methods()関数を用いるとよい\n\nmethods(mean)\n\n [1] mean,ANY-method          mean,Matrix-method       mean,sparseMatrix-method\n [4] mean,sparseVector-method mean.Date*               mean.default*           \n [7] mean.difftime*           mean.POSIXct*            mean.POSIXlt*           \n[10] mean.quosure*            mean.vctrs_vctr*         mean.yearmon*           \n[13] mean.yearqtr*            mean.zoo*               \nsee '?methods' for accessing help and source code\n\n\n様々な結果が示されるがここでは，2めの要素にあるmean.default*を確認しよう．*をとってmean.defaultと入力するだけでよい．\n\nmean.default\n\nfunction (x, trim = 0, na.rm = FALSE, ...) \n{\n    if (!is.numeric(x) && !is.complex(x) && !is.logical(x)) {\n        warning(\"argument is not numeric or logical: returning NA\")\n        return(NA_real_)\n    }\n    if (isTRUE(na.rm)) \n        x <- x[!is.na(x)]\n    if (!is.numeric(trim) || length(trim) != 1L) \n        stop(\"'trim' must be numeric of length one\")\n    n <- length(x)\n    if (trim > 0 && n) {\n        if (is.complex(x)) \n            stop(\"trimmed means are not defined for complex data\")\n        if (anyNA(x)) \n            return(NA_real_)\n        if (trim >= 0.5) \n            return(stats::median(x, na.rm = FALSE))\n        lo <- floor(n * trim) + 1\n        hi <- n + 1 - lo\n        x <- sort.int(x, partial = unique(c(lo, hi)))[lo:hi]\n    }\n    .Internal(mean(x))\n}\n<bytecode: 0x124693e28>\n<environment: namespace:base>\n\n\n\ngetAnywhere(mean.default)\n\nA single object matching 'mean.default' was found\nIt was found in the following places\n  package:base\n  registered S3 method for mean from namespace base\n  namespace:base\nwith value\n\nfunction (x, trim = 0, na.rm = FALSE, ...) \n{\n    if (!is.numeric(x) && !is.complex(x) && !is.logical(x)) {\n        warning(\"argument is not numeric or logical: returning NA\")\n        return(NA_real_)\n    }\n    if (isTRUE(na.rm)) \n        x <- x[!is.na(x)]\n    if (!is.numeric(trim) || length(trim) != 1L) \n        stop(\"'trim' must be numeric of length one\")\n    n <- length(x)\n    if (trim > 0 && n) {\n        if (is.complex(x)) \n            stop(\"trimmed means are not defined for complex data\")\n        if (anyNA(x)) \n            return(NA_real_)\n        if (trim >= 0.5) \n            return(stats::median(x, na.rm = FALSE))\n        lo <- floor(n * trim) + 1\n        hi <- n + 1 - lo\n        x <- sort.int(x, partial = unique(c(lo, hi)))[lo:hi]\n    }\n    .Internal(mean(x))\n}\n<bytecode: 0x124693e28>\n<environment: namespace:base>\n\n\n\nlibrary(DescTools)\nOddsRatio\n\nfunction (x, conf.level = NULL, ...) \n{\n    UseMethod(\"OddsRatio\")\n}\n<bytecode: 0x142c60b50>\n<environment: namespace:DescTools>\n\nmethods(OddsRatio)\n\n[1] OddsRatio.default*  OddsRatio.glm*      OddsRatio.multinom*\n[4] OddsRatio.zeroinfl*\nsee '?methods' for accessing help and source code\n\nDescTools:::OddsRatio.default\n\nfunction (x, conf.level = NULL, y = NULL, method = c(\"wald\", \n    \"mle\", \"midp\"), interval = c(0, 1000), ...) \n{\n    if (!is.null(y)) \n        x <- table(x, y, ...)\n    if (is.null(conf.level)) \n        conf.level <- NA\n    p <- (d <- dim(x))[1L]\n    if (!is.numeric(x) || length(d) != 2L || p != d[2L] || p != \n        2L) \n        stop(\"'x' is not a 2x2 numeric matrix\")\n    switch(match.arg(arg = method, choices = c(\"wald\", \"mle\", \n        \"midp\")), wald = {\n        if (any(x == 0)) x <- x + 0.5\n        lx <- log(x)\n        or <- exp(lx[1, 1] + lx[2, 2] - lx[1, 2] - lx[2, 1])\n        if (is.na(conf.level)) {\n            res <- or\n        } else {\n            sigma2lor <- sum(1/x)\n            ci <- or * exp(c(1, -1) * qnorm((1 - conf.level)/2) * \n                sqrt(sigma2lor))\n            res <- c(`odds ratio` = or, lwr.ci = ci[1], upr.ci = ci[2])\n        }\n    }, mle = {\n        if (is.na(conf.level)) {\n            res <- unname(fisher.test(x, conf.int = FALSE)$estimate)\n        } else {\n            res <- fisher.test(x, conf.level = conf.level)\n            res <- c(res$estimate, lwr.ci = res$conf.int[1], \n                upr.ci = res$conf.int[2])\n        }\n    }, midp = {\n        a1 <- x[1, 1]\n        a0 <- x[1, 2]\n        b1 <- x[2, 1]\n        b0 <- x[2, 2]\n        or <- 1\n        mue <- function(a1, a0, b1, b0, or) {\n            mm <- matrix(c(a1, a0, b1, b0), 2, 2, byrow = TRUE)\n            fisher.test(mm, or = or, alternative = \"l\")$p - fisher.test(x = x, \n                or = or, alternative = \"g\")$p\n        }\n        midp <- function(a1, a0, b1, b0, or = 1) {\n            mm <- matrix(c(a1, a0, b1, b0), 2, 2, byrow = TRUE)\n            lteqtoa1 <- fisher.test(mm, or = or, alternative = \"l\")$p.val\n            gteqtoa1 <- fisher.test(mm, or = or, alternative = \"g\")$p.val\n            0.5 * (lteqtoa1 - gteqtoa1 + 1)\n        }\n        EST <- uniroot(function(or) {\n            mue(a1, a0, b1, b0, or)\n        }, interval = interval)$root\n        if (is.na(conf.level)) {\n            res <- EST\n        } else {\n            alpha <- 1 - conf.level\n            LCL <- uniroot(function(or) {\n                1 - midp(a1, a0, b1, b0, or) - alpha/2\n            }, interval = interval)$root\n            UCL <- 1/uniroot(function(or) {\n                midp(a1, a0, b1, b0, or = 1/or) - alpha/2\n            }, interval = interval)$root\n            res <- c(`odds ratio` = EST, lwr.ci = LCL, upr.ci = UCL)\n        }\n    })\n    return(res)\n}\n<bytecode: 0x110276500>\n<environment: namespace:DescTools>\n\ngetAnywhere(OddsRatio.default)\n\nA single object matching 'OddsRatio.default' was found\nIt was found in the following places\n  registered S3 method for OddsRatio from namespace DescTools\n  namespace:DescTools\nwith value\n\nfunction (x, conf.level = NULL, y = NULL, method = c(\"wald\", \n    \"mle\", \"midp\"), interval = c(0, 1000), ...) \n{\n    if (!is.null(y)) \n        x <- table(x, y, ...)\n    if (is.null(conf.level)) \n        conf.level <- NA\n    p <- (d <- dim(x))[1L]\n    if (!is.numeric(x) || length(d) != 2L || p != d[2L] || p != \n        2L) \n        stop(\"'x' is not a 2x2 numeric matrix\")\n    switch(match.arg(arg = method, choices = c(\"wald\", \"mle\", \n        \"midp\")), wald = {\n        if (any(x == 0)) x <- x + 0.5\n        lx <- log(x)\n        or <- exp(lx[1, 1] + lx[2, 2] - lx[1, 2] - lx[2, 1])\n        if (is.na(conf.level)) {\n            res <- or\n        } else {\n            sigma2lor <- sum(1/x)\n            ci <- or * exp(c(1, -1) * qnorm((1 - conf.level)/2) * \n                sqrt(sigma2lor))\n            res <- c(`odds ratio` = or, lwr.ci = ci[1], upr.ci = ci[2])\n        }\n    }, mle = {\n        if (is.na(conf.level)) {\n            res <- unname(fisher.test(x, conf.int = FALSE)$estimate)\n        } else {\n            res <- fisher.test(x, conf.level = conf.level)\n            res <- c(res$estimate, lwr.ci = res$conf.int[1], \n                upr.ci = res$conf.int[2])\n        }\n    }, midp = {\n        a1 <- x[1, 1]\n        a0 <- x[1, 2]\n        b1 <- x[2, 1]\n        b0 <- x[2, 2]\n        or <- 1\n        mue <- function(a1, a0, b1, b0, or) {\n            mm <- matrix(c(a1, a0, b1, b0), 2, 2, byrow = TRUE)\n            fisher.test(mm, or = or, alternative = \"l\")$p - fisher.test(x = x, \n                or = or, alternative = \"g\")$p\n        }\n        midp <- function(a1, a0, b1, b0, or = 1) {\n            mm <- matrix(c(a1, a0, b1, b0), 2, 2, byrow = TRUE)\n            lteqtoa1 <- fisher.test(mm, or = or, alternative = \"l\")$p.val\n            gteqtoa1 <- fisher.test(mm, or = or, alternative = \"g\")$p.val\n            0.5 * (lteqtoa1 - gteqtoa1 + 1)\n        }\n        EST <- uniroot(function(or) {\n            mue(a1, a0, b1, b0, or)\n        }, interval = interval)$root\n        if (is.na(conf.level)) {\n            res <- EST\n        } else {\n            alpha <- 1 - conf.level\n            LCL <- uniroot(function(or) {\n                1 - midp(a1, a0, b1, b0, or) - alpha/2\n            }, interval = interval)$root\n            UCL <- 1/uniroot(function(or) {\n                midp(a1, a0, b1, b0, or = 1/or) - alpha/2\n            }, interval = interval)$root\n            res <- c(`odds ratio` = EST, lwr.ci = LCL, upr.ci = UCL)\n        }\n    })\n    return(res)\n}\n<bytecode: 0x110276500>\n<environment: namespace:DescTools>"
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "参考文献",
    "section": "",
    "text": "Knuth, Donald E. 1984. “Literate Programming.” Comput.\nJ. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97."
  },
  {
    "objectID": "pipe.html#を使う",
    "href": "pipe.html#を使う",
    "title": "2  パイプ演算子",
    "section": "2.3 %>%を使う",
    "text": "2.3 %>%を使う\n以下のコードはすべてうまく実行される．\n\na %>% mean()\na %>% mean\na %>% mean(.)\na %>% mean(x = .)\na %>% {mean(.)}\na %>% {c(mean(.), sd(.), min(.), max(.), length(.))}\na %>% {list(mean(.), sd(.), min(.), max(.), length(.))}"
  },
  {
    "objectID": "pipe.html#を使う-1",
    "href": "pipe.html#を使う-1",
    "title": "2  パイプ演算子",
    "section": "2.4 |> を使う",
    "text": "2.4 |> を使う\nプレースホルダーを.から_に変更しただけだが， 以下のコードの多くでエラーが出る．native pipeは直感的な利用が難しい．\n\na |> mean()\na |> mean  # エラー\na |> mean(_)  # エラー\na |> mean(x = _)\na |> {mean(_)}  # エラー\na |> {c(mean(_), sd(_), min(_), max(_), length(_))}  # エラー\na |> {list(mean(_), sd(_), min(_), max(_), length(_))}  # エラー"
  },
  {
    "objectID": "pipe.html#第2引数がある場合",
    "href": "pipe.html#第2引数がある場合",
    "title": "2  パイプ演算子",
    "section": "2.6 第2引数がある場合",
    "text": "2.6 第2引数がある場合\n\ny <- c(1, NA, 3:100)\ny\n\n  [1]   1  NA   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18\n [19]  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36\n [37]  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54\n [55]  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71  72\n [73]  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89  90\n [91]  91  92  93  94  95  96  97  98  99 100\n\ny %>% mean\n\n[1] NA\n\ny %>% mean(na.rm = TRUE)\n\n[1] 50.9899\n\ny |> mean()\n\n[1] NA\n\ny |> mean(na.rm = TRUE)\n\n[1] 50.9899\n\n\n引数が1つしかない場合は x |> f や x %>% f は f(x)を行っているのと同じ． 引数が複数ある場合は1つ目の引数（第1引数）にxが用いられる． 引数が複数ある場合に1つ目の引数以外にxを適用したい場合は |>であれば_を使用する．%>%であれば. を使用する． y |> f(x, _) とすれば f(x, y) を実行しているのと同じである．\n\npi\n\n[1] 3.141593\n\n3 |> round(pi, digits = _)\n\n[1] 3.142\n\n3 %>%  round(pi, digits = .)\n\n[1] 3.142"
  },
  {
    "objectID": "tips.html#正規表現regular-expression",
    "href": "tips.html#正規表現regular-expression",
    "title": "7  その他メモ",
    "section": "7.2 正規表現（regular expression）",
    "text": "7.2 正規表現（regular expression）\n\nextended regular expressions (the default)\nPerl-like regular expressions\nliteral regular expressions\n\nメタキャラクター：. \\ | ( ) [ { ^ $ * + ?\n\nletters\n\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n[20] \"t\" \"u\" \"v\" \"w\" \"x\" \"y\" \"z\"\n\ngrep(\"j|k\", fruit)\n\n[1]  7  8 30 32 38 39 41 72\n\ngrep(\"[jk]\", fruit)\n\n[1]  7  8 30 32 38 39 41 72\n\ngrepl(\"j|k\", fruit)\n\n [1] FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE FALSE FALSE FALSE FALSE\n[13] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[25] FALSE FALSE FALSE FALSE FALSE  TRUE FALSE  TRUE FALSE FALSE FALSE FALSE\n[37] FALSE  TRUE  TRUE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[49] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[61] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE\n[73] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\ngrepl(\"[jk]\", fruit)\n\n [1] FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE FALSE FALSE FALSE FALSE\n[13] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[25] FALSE FALSE FALSE FALSE FALSE  TRUE FALSE  TRUE FALSE FALSE FALSE FALSE\n[37] FALSE  TRUE  TRUE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[49] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[61] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE\n[73] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\nsub(\"[jk]\",\"XXXXX\", fruit)\n\n [1] \"Apple\"             \"Apricot\"           \"Avocado\"          \n [4] \"Banana\"            \"Bell pepper\"       \"Bilberry\"         \n [7] \"BlacXXXXXberry\"    \"BlacXXXXXcurrant\"  \"Blood orange\"     \n[10] \"Blueberry\"         \"Boysenberry\"       \"Breadfruit\"       \n[13] \"Canary melon\"      \"Cantaloupe\"        \"Cherimoya\"        \n[16] \"Cherry\"            \"Chili pepper\"      \"Clementine\"       \n[19] \"Cloudberry\"        \"Coconut\"           \"Cranberry\"        \n[22] \"Cucumber\"          \"Currant\"           \"Damson\"           \n[25] \"Date\"              \"Dragonfruit\"       \"Durian\"           \n[28] \"Eggplant\"          \"Elderberry\"        \"FeiXXXXXoa\"       \n[31] \"Fig\"               \"GoXXXXXi berry\"    \"Gooseberry\"       \n[34] \"Grape\"             \"Grapefruit\"        \"Guava\"            \n[37] \"Honeydew\"          \"HucXXXXXleberry\"   \"JacXXXXXfruit\"    \n[40] \"Jambul\"            \"JuXXXXXube\"        \"Kiwi fruit\"       \n[43] \"Kumquat\"           \"Lemon\"             \"Lime\"             \n[46] \"Loquat\"            \"Lychee\"            \"Mandarine\"        \n[49] \"Mango\"             \"Mulberry\"          \"Nectarine\"        \n[52] \"Nut\"               \"Olive\"             \"Orange\"           \n[55] \"Pamelo\"            \"Papaya\"            \"Passionfruit\"     \n[58] \"Peach\"             \"Pear\"              \"Persimmon\"        \n[61] \"Physalis\"          \"Pineapple\"         \"Plum\"             \n[64] \"Pomegranate\"       \"Pomelo\"            \"Purple mangosteen\"\n[67] \"Quince\"            \"Raisin\"            \"Rambutan\"         \n[70] \"Raspberry\"         \"Redcurrant\"        \"RocXXXXX melon\"   \n[73] \"Salal berry\"       \"Satsuma\"           \"Star fruit\"       \n[76] \"Strawberry\"        \"Tamarillo\"         \"Tangerine\"        \n[79] \"Ugli fruit\"        \"Watermelon\"       \n\ngsub(\"[jk]\",\"XXXXX\", fruit)\n\n [1] \"Apple\"             \"Apricot\"           \"Avocado\"          \n [4] \"Banana\"            \"Bell pepper\"       \"Bilberry\"         \n [7] \"BlacXXXXXberry\"    \"BlacXXXXXcurrant\"  \"Blood orange\"     \n[10] \"Blueberry\"         \"Boysenberry\"       \"Breadfruit\"       \n[13] \"Canary melon\"      \"Cantaloupe\"        \"Cherimoya\"        \n[16] \"Cherry\"            \"Chili pepper\"      \"Clementine\"       \n[19] \"Cloudberry\"        \"Coconut\"           \"Cranberry\"        \n[22] \"Cucumber\"          \"Currant\"           \"Damson\"           \n[25] \"Date\"              \"Dragonfruit\"       \"Durian\"           \n[28] \"Eggplant\"          \"Elderberry\"        \"FeiXXXXXoa\"       \n[31] \"Fig\"               \"GoXXXXXi berry\"    \"Gooseberry\"       \n[34] \"Grape\"             \"Grapefruit\"        \"Guava\"            \n[37] \"Honeydew\"          \"HucXXXXXleberry\"   \"JacXXXXXfruit\"    \n[40] \"Jambul\"            \"JuXXXXXube\"        \"Kiwi fruit\"       \n[43] \"Kumquat\"           \"Lemon\"             \"Lime\"             \n[46] \"Loquat\"            \"Lychee\"            \"Mandarine\"        \n[49] \"Mango\"             \"Mulberry\"          \"Nectarine\"        \n[52] \"Nut\"               \"Olive\"             \"Orange\"           \n[55] \"Pamelo\"            \"Papaya\"            \"Passionfruit\"     \n[58] \"Peach\"             \"Pear\"              \"Persimmon\"        \n[61] \"Physalis\"          \"Pineapple\"         \"Plum\"             \n[64] \"Pomegranate\"       \"Pomelo\"            \"Purple mangosteen\"\n[67] \"Quince\"            \"Raisin\"            \"Rambutan\"         \n[70] \"Raspberry\"         \"Redcurrant\"        \"RocXXXXX melon\"   \n[73] \"Salal berry\"       \"Satsuma\"           \"Star fruit\"       \n[76] \"Strawberry\"        \"Tamarillo\"         \"Tangerine\"        \n[79] \"Ugli fruit\"        \"Watermelon\"       \n\nx <- \"Hello World!\"\n\n# 文頭\ngrepl(\"^e\", x)\n\n[1] FALSE\n\ngrepl(\"^H\", x)\n\n[1] TRUE\n\ngrepl(\"^h\", x)\n\n[1] FALSE\n\n# 文末\ngrepl(\"d$\", x)\n\n[1] FALSE\n\ngrepl(\"!$\", x)\n\n[1] TRUE\n\n# いずれか\ngrepl(\"[!]\", x)\n\n[1] TRUE\n\ngrepl(\"[a]\", x)\n\n[1] FALSE\n\ngrepl(\"[A-Za-z0-9]\", \"!!!!!\")\n\n[1] FALSE\n\ngrepl(\"[A-Za-z0-9]\", \"99999\")\n\n[1] TRUE\n\ngrepl(\"[A-Za-z0-9]\", \"#####\")\n\n[1] FALSE\n\ngrepl(\"[A-Za-z0-9]\", \"####1#\")\n\n[1] TRUE\n\n# グルーピング\ngrepl(\"(e)\", x)\n\n[1] TRUE\n\ngrepl(\"(e) +(d)\", x)\n\n[1] FALSE\n\ngrepl(\"(e)+(w)\", x)\n\n[1] FALSE\n\ngrepl(\"(H)(e)\", x)\n\n[1] TRUE\n\ngrepl(\"(H)(l)\", x)\n\n[1] FALSE\n\ngrep(\"[e]\", x)\n\n[1] 1\n\ngrepl(\"[e]\", x)\n\n[1] TRUE\n\ngrepl(\"e\", x)\n\n[1] TRUE\n\ngrepl(\"l|k\", x)\n\n[1] TRUE\n\ngrepl(\"e\", x)\n\n[1] TRUE\n\ngrepl(\"h\", x)\n\n[1] FALSE\n\ngrepl(\".\", x)\n\n[1] TRUE\n\ngrep(\"[e]\", letters)\n\n[1] 5\n\ngrepl(\"[e]\", letters)\n\n [1] FALSE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[13] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[25] FALSE FALSE\n\ngrepl(\"e\", letters)\n\n [1] FALSE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[13] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[25] FALSE FALSE\n\ngrepl(\"l|k\", letters)\n\n [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE\n[13] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[25] FALSE FALSE\n\ngrepl(\"e\", letters)\n\n [1] FALSE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[13] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[25] FALSE FALSE\n\ngrepl(\"h\", letters)\n\n [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE\n[13] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[25] FALSE FALSE\n\ngrepl(\".\", letters)\n\n [1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[16] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n\n\nlibrary(tidyverse)\nstarwars$name[grepl(\"aa|[k]\", starwars$name)]\n\n [1] \"Luke Skywalker\"        \"Biggs Darklighter\"     \"Anakin Skywalker\"     \n [4] \"Wilhuff Tarkin\"        \"Jek Tono Porkins\"      \"Bossk\"                \n [7] \"Ackbar\"                \"Wicket Systri Warrick\" \"Jar Jar Binks\"        \n[10] \"Quarsh Panaka\"         \"Shmi Skywalker\"        \"Dooku\"                \n[13] \"Shaak Ti\""
  },
  {
    "objectID": "tips.html#any_of-all_of",
    "href": "tips.html#any_of-all_of",
    "title": "7  その他メモ",
    "section": "7.3 any_of, all_of",
    "text": "7.3 any_of, all_of\n変数名をオブジェクトとして用いるときに便利．\n\nselect_vars <- c(\"height\", \"mass\")\nstarwars |> select(select_vars) \n\nWarning: Using an external vector in selections was deprecated in tidyselect 1.1.0.\nℹ Please use `all_of()` or `any_of()` instead.\n  # Was:\n  data %>% select(select_vars)\n\n  # Now:\n  data %>% select(all_of(select_vars))\n\nSee <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.\n\n\n# A tibble: 87 × 2\n   height  mass\n    <int> <dbl>\n 1    172    77\n 2    167    75\n 3     96    32\n 4    202   136\n 5    150    49\n 6    178   120\n 7    165    75\n 8     97    32\n 9    183    84\n10    182    77\n# ℹ 77 more rows\n\nstarwars |> select(any_of(select_vars))\n\n# A tibble: 87 × 2\n   height  mass\n    <int> <dbl>\n 1    172    77\n 2    167    75\n 3     96    32\n 4    202   136\n 5    150    49\n 6    178   120\n 7    165    75\n 8     97    32\n 9    183    84\n10    182    77\n# ℹ 77 more rows"
  },
  {
    "objectID": "tips.html#map",
    "href": "tips.html#map",
    "title": "7  その他メモ",
    "section": "7.4 map",
    "text": "7.4 map\n\nlibrary(purrr)\nx <- 1:10\nsqrt(x)\n\n [1] 1.000000 1.414214 1.732051 2.000000 2.236068 2.449490 2.645751 2.828427\n [9] 3.000000 3.162278\n\nmap(x, sqrt)\n\n[[1]]\n[1] 1\n\n[[2]]\n[1] 1.414214\n\n[[3]]\n[1] 1.732051\n\n[[4]]\n[1] 2\n\n[[5]]\n[1] 2.236068\n\n[[6]]\n[1] 2.44949\n\n[[7]]\n[1] 2.645751\n\n[[8]]\n[1] 2.828427\n\n[[9]]\n[1] 3\n\n[[10]]\n[1] 3.162278\n\nmap_vec(x, sqrt)\n\n [1] 1.000000 1.414214 1.732051 2.000000 2.236068 2.449490 2.645751 2.828427\n [9] 3.000000 3.162278\n\n\nd <- d %>% mutate(gpa_std = (gpa_sum - mean(gpa_sum, na.rm = TRUE)) / sd(gpa_sum, na.rm = TRUE))"
  },
  {
    "objectID": "tips.html#部分一致",
    "href": "tips.html#部分一致",
    "title": "7  その他メモ",
    "section": "7.5 部分一致",
    "text": "7.5 部分一致\ndata.frame形式であれば$で変数名の部分一致が利用できるが，tibble形式ではできない．部分一致によってエラーが生じる可能性もあるので省略せずに入力するほうが良い．\n\nlibrary(tidyverse)\nstarwars\n\n# A tibble: 87 × 14\n   name     height  mass hair_color skin_color eye_color birth_year sex   gender\n   <chr>     <int> <dbl> <chr>      <chr>      <chr>          <dbl> <chr> <chr> \n 1 Luke Sk…    172    77 blond      fair       blue            19   male  mascu…\n 2 C-3PO       167    75 <NA>       gold       yellow         112   none  mascu…\n 3 R2-D2        96    32 <NA>       white, bl… red             33   none  mascu…\n 4 Darth V…    202   136 none       white      yellow          41.9 male  mascu…\n 5 Leia Or…    150    49 brown      light      brown           19   fema… femin…\n 6 Owen La…    178   120 brown, gr… light      blue            52   male  mascu…\n 7 Beru Wh…    165    75 brown      light      blue            47   fema… femin…\n 8 R5-D4        97    32 <NA>       white, red red             NA   none  mascu…\n 9 Biggs D…    183    84 black      light      brown           24   male  mascu…\n10 Obi-Wan…    182    77 auburn, w… fair       blue-gray       57   male  mascu…\n# ℹ 77 more rows\n# ℹ 5 more variables: homeworld <chr>, species <chr>, films <list>,\n#   vehicles <list>, starships <list>\n\nstarwars$hei\n\nWarning: Unknown or uninitialised column: `hei`.\n\n\nNULL\n\nstarwars$ha\n\nWarning: Unknown or uninitialised column: `ha`.\n\n\nNULL\n\nstarwars_df <- as.data.frame(starwars) \nstarwars_df$hei\n\n [1] 172 167  96 202 150 178 165  97 183 182 188 180 228 180 173 175 170 180  66\n[20] 170 183 200 190 177 175 180 150  NA  88 160 193 191 170 196 224 206 183 137\n[39] 112 183 163 175 180 178  94 122 163 188 198 196 171 184 188 264 188 196 185\n[58] 157 183 183 170 166 165 193 191 183 168 198 229 213 167  79  96 193 191 178\n[77] 216 234 188 178 206  NA  NA  NA  NA  NA 165\n\nstarwars_df$ha\n\n [1] \"blond\"         NA              NA              \"none\"         \n [5] \"brown\"         \"brown, grey\"   \"brown\"         NA             \n [9] \"black\"         \"auburn, white\" \"blond\"         \"auburn, grey\" \n[13] \"brown\"         \"brown\"         NA              NA             \n[17] \"brown\"         \"brown\"         \"white\"         \"grey\"         \n[21] \"black\"         \"none\"          \"none\"          \"black\"        \n[25] \"none\"          \"none\"          \"auburn\"        \"brown\"        \n[29] \"brown\"         \"none\"          \"brown\"         \"none\"         \n[33] \"blond\"         \"none\"          \"none\"          \"none\"         \n[37] \"brown\"         \"black\"         \"none\"          \"black\"        \n[41] \"black\"         \"none\"          \"none\"          \"none\"         \n[45] \"none\"          \"none\"          \"none\"          \"none\"         \n[49] \"white\"         \"none\"          \"black\"         \"none\"         \n[53] \"none\"          \"none\"          \"none\"          \"none\"         \n[57] \"black\"         \"brown\"         \"brown\"         \"none\"         \n[61] \"black\"         \"black\"         \"brown\"         \"white\"        \n[65] \"black\"         \"black\"         \"blonde\"        \"none\"         \n[69] \"none\"          \"none\"          \"white\"         \"none\"         \n[73] \"none\"          \"none\"          \"none\"          \"none\"         \n[77] \"none\"          \"brown\"         \"brown\"         \"none\"         \n[81] \"none\"          \"black\"         \"brown\"         \"brown\"        \n[85] \"none\"          \"unknown\"       \"brown\""
  },
  {
    "objectID": "tips.html#因子",
    "href": "tips.html#因子",
    "title": "7  その他メモ",
    "section": "7.6 因子",
    "text": "7.6 因子\n\nx <- c(0,1,1,1,0)\ny <- factor(x)\ny\n\n[1] 0 1 1 1 0\nLevels: 0 1\n\nstr(y)\n\n Factor w/ 2 levels \"0\",\"1\": 1 2 2 2 1\n\nattributes(y)\n\n$levels\n[1] \"0\" \"1\"\n\n$class\n[1] \"factor\"\n\nlevels(y)\n\n[1] \"0\" \"1\"\n\nas.numeric(y)\n\n[1] 1 2 2 2 1\n\nas.numeric(as.character(y))\n\n[1] 0 1 1 1 0"
  },
  {
    "objectID": "tips.html#集計データを個票データに変換する",
    "href": "tips.html#集計データを個票データに変換する",
    "title": "7  その他メモ",
    "section": "7.7 集計データを個票データに変換する",
    "text": "7.7 集計データを個票データに変換する\n\n# クロス表\noccupationalStatus\n\n      destination\norigin   1   2   3   4   5   6   7   8\n     1  50  19  26   8   7  11   6   2\n     2  16  40  34  18  11  20   8   3\n     3  12  35  65  66  35  88  23  21\n     4  11  20  58 110  40 183  64  32\n     5   2   8  12  23  25  46  28  12\n     6  12  28 102 162  90 554 230 177\n     7   0   6  19  40  21 158 143  71\n     8   0   3  14  32  15 126  91 106\n\n# 集計データ\ndata.frame(occupationalStatus)\n\n   origin destination Freq\n1       1           1   50\n2       2           1   16\n3       3           1   12\n4       4           1   11\n5       5           1    2\n6       6           1   12\n7       7           1    0\n8       8           1    0\n9       1           2   19\n10      2           2   40\n11      3           2   35\n12      4           2   20\n13      5           2    8\n14      6           2   28\n15      7           2    6\n16      8           2    3\n17      1           3   26\n18      2           3   34\n19      3           3   65\n20      4           3   58\n21      5           3   12\n22      6           3  102\n23      7           3   19\n24      8           3   14\n25      1           4    8\n26      2           4   18\n27      3           4   66\n28      4           4  110\n29      5           4   23\n30      6           4  162\n31      7           4   40\n32      8           4   32\n33      1           5    7\n34      2           5   11\n35      3           5   35\n36      4           5   40\n37      5           5   25\n38      6           5   90\n39      7           5   21\n40      8           5   15\n41      1           6   11\n42      2           6   20\n43      3           6   88\n44      4           6  183\n45      5           6   46\n46      6           6  554\n47      7           6  158\n48      8           6  126\n49      1           7    6\n50      2           7    8\n51      3           7   23\n52      4           7   64\n53      5           7   28\n54      6           7  230\n55      7           7  143\n56      8           7   91\n57      1           8    2\n58      2           8    3\n59      3           8   21\n60      4           8   32\n61      5           8   12\n62      6           8  177\n63      7           8   71\n64      8           8  106\n\n# 個票データ\ndf_occupationalStatus <- vcdExtra::expand.dft(data.frame(occupationalStatus), dreq = \"Freq\") |> \n  mutate(across(origin:destination, factor))\n# \ndf_occupationalStatus |> summary()\n\n     origin      destination  \n 6      :1355   6      :1186  \n 4      : 518   7      : 593  \n 7      : 458   4      : 459  \n 8      : 387   8      : 424  \n 3      : 345   3      : 330  \n 5      : 156   5      : 244  \n (Other): 279   (Other): 262"
  },
  {
    "objectID": "tips.html#unname",
    "href": "tips.html#unname",
    "title": "7  その他メモ",
    "section": "7.9 unname",
    "text": "7.9 unname\nCramer’s Vをchisq.test()の結果を利用して作成する． その際，unname()によってカイ2乗統計量の名前をとる．\n\noccupationalStatus\n\n      destination\norigin   1   2   3   4   5   6   7   8\n     1  50  19  26   8   7  11   6   2\n     2  16  40  34  18  11  20   8   3\n     3  12  35  65  66  35  88  23  21\n     4  11  20  58 110  40 183  64  32\n     5   2   8  12  23  25  46  28  12\n     6  12  28 102 162  90 554 230 177\n     7   0   6  19  40  21 158 143  71\n     8   0   3  14  32  15 126  91 106\n\nchisq.test(occupationalStatus)\n\nWarning in chisq.test(occupationalStatus): Chi-squared approximation may be\nincorrect\n\n\n\n    Pearson's Chi-squared test\n\ndata:  occupationalStatus\nX-squared = 1416, df = 49, p-value < 2.2e-16\n\nX2 <- chisq.test(occupationalStatus)$statistic |> unname()\n\nWarning in chisq.test(occupationalStatus): Chi-squared approximation may be\nincorrect\n\nX2\n\n[1] 1416.04\n\nmy_CramerV <- sqrt(X2/min(dim(occupationalStatus)-1)/sum(occupationalStatus))\nmy_CramerV\n\n[1] 0.2404799\n\nDescTools::CramerV(occupationalStatus)\n\n[1] 0.2404799"
  },
  {
    "objectID": "tips.html#文字列の処理",
    "href": "tips.html#文字列の処理",
    "title": "7  その他メモ",
    "section": "7.1 文字列の処理",
    "text": "7.1 文字列の処理\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n\nlibrary(stringr)\n\n\nfruit\n\n [1] \"apple\"             \"apricot\"           \"avocado\"          \n [4] \"banana\"            \"bell pepper\"       \"bilberry\"         \n [7] \"blackberry\"        \"blackcurrant\"      \"blood orange\"     \n[10] \"blueberry\"         \"boysenberry\"       \"breadfruit\"       \n[13] \"canary melon\"      \"cantaloupe\"        \"cherimoya\"        \n[16] \"cherry\"            \"chili pepper\"      \"clementine\"       \n[19] \"cloudberry\"        \"coconut\"           \"cranberry\"        \n[22] \"cucumber\"          \"currant\"           \"damson\"           \n[25] \"date\"              \"dragonfruit\"       \"durian\"           \n[28] \"eggplant\"          \"elderberry\"        \"feijoa\"           \n[31] \"fig\"               \"goji berry\"        \"gooseberry\"       \n[34] \"grape\"             \"grapefruit\"        \"guava\"            \n[37] \"honeydew\"          \"huckleberry\"       \"jackfruit\"        \n[40] \"jambul\"            \"jujube\"            \"kiwi fruit\"       \n[43] \"kumquat\"           \"lemon\"             \"lime\"             \n[46] \"loquat\"            \"lychee\"            \"mandarine\"        \n[49] \"mango\"             \"mulberry\"          \"nectarine\"        \n[52] \"nut\"               \"olive\"             \"orange\"           \n[55] \"pamelo\"            \"papaya\"            \"passionfruit\"     \n[58] \"peach\"             \"pear\"              \"persimmon\"        \n[61] \"physalis\"          \"pineapple\"         \"plum\"             \n[64] \"pomegranate\"       \"pomelo\"            \"purple mangosteen\"\n[67] \"quince\"            \"raisin\"            \"rambutan\"         \n[70] \"raspberry\"         \"redcurrant\"        \"rock melon\"       \n[73] \"salal berry\"       \"satsuma\"           \"star fruit\"       \n[76] \"strawberry\"        \"tamarillo\"         \"tangerine\"        \n[79] \"ugli fruit\"        \"watermelon\"       \n\n# 長さ\nstr_length(fruit)\n\n [1]  5  7  7  6 11  8 10 12 12  9 11 10 12 10  9  6 12 10 10  7  9  8  7  6  4\n[26] 11  6  8 10  6  3 10 10  5 10  5  8 11  9  6  6 10  7  5  4  6  6  9  5  8\n[51]  9  3  5  6  6  6 12  5  4  9  8  9  4 11  6 17  6  6  8  9 10 10 11  7 10\n[76] 10  9  9 10 10\n\n# くっつける\nstr_c(\"fruit_\", fruit)\n\n [1] \"fruit_apple\"             \"fruit_apricot\"          \n [3] \"fruit_avocado\"           \"fruit_banana\"           \n [5] \"fruit_bell pepper\"       \"fruit_bilberry\"         \n [7] \"fruit_blackberry\"        \"fruit_blackcurrant\"     \n [9] \"fruit_blood orange\"      \"fruit_blueberry\"        \n[11] \"fruit_boysenberry\"       \"fruit_breadfruit\"       \n[13] \"fruit_canary melon\"      \"fruit_cantaloupe\"       \n[15] \"fruit_cherimoya\"         \"fruit_cherry\"           \n[17] \"fruit_chili pepper\"      \"fruit_clementine\"       \n[19] \"fruit_cloudberry\"        \"fruit_coconut\"          \n[21] \"fruit_cranberry\"         \"fruit_cucumber\"         \n[23] \"fruit_currant\"           \"fruit_damson\"           \n[25] \"fruit_date\"              \"fruit_dragonfruit\"      \n[27] \"fruit_durian\"            \"fruit_eggplant\"         \n[29] \"fruit_elderberry\"        \"fruit_feijoa\"           \n[31] \"fruit_fig\"               \"fruit_goji berry\"       \n[33] \"fruit_gooseberry\"        \"fruit_grape\"            \n[35] \"fruit_grapefruit\"        \"fruit_guava\"            \n[37] \"fruit_honeydew\"          \"fruit_huckleberry\"      \n[39] \"fruit_jackfruit\"         \"fruit_jambul\"           \n[41] \"fruit_jujube\"            \"fruit_kiwi fruit\"       \n[43] \"fruit_kumquat\"           \"fruit_lemon\"            \n[45] \"fruit_lime\"              \"fruit_loquat\"           \n[47] \"fruit_lychee\"            \"fruit_mandarine\"        \n[49] \"fruit_mango\"             \"fruit_mulberry\"         \n[51] \"fruit_nectarine\"         \"fruit_nut\"              \n[53] \"fruit_olive\"             \"fruit_orange\"           \n[55] \"fruit_pamelo\"            \"fruit_papaya\"           \n[57] \"fruit_passionfruit\"      \"fruit_peach\"            \n[59] \"fruit_pear\"              \"fruit_persimmon\"        \n[61] \"fruit_physalis\"          \"fruit_pineapple\"        \n[63] \"fruit_plum\"              \"fruit_pomegranate\"      \n[65] \"fruit_pomelo\"            \"fruit_purple mangosteen\"\n[67] \"fruit_quince\"            \"fruit_raisin\"           \n[69] \"fruit_rambutan\"          \"fruit_raspberry\"        \n[71] \"fruit_redcurrant\"        \"fruit_rock melon\"       \n[73] \"fruit_salal berry\"       \"fruit_satsuma\"          \n[75] \"fruit_star fruit\"        \"fruit_strawberry\"       \n[77] \"fruit_tamarillo\"         \"fruit_tangerine\"        \n[79] \"fruit_ugli fruit\"        \"fruit_watermelon\"       \n\n# パターンの数\nstr_count(fruit, \"[a-b]\")\n\n [1] 1 1 2 4 1 2 3 3 2 2 2 2 2 2 1 0 0 0 1 0 2 1 1 1 1 1 1 1 1 1 0 1 1 1 1 2 0 1\n[39] 1 2 1 0 1 0 0 1 0 2 1 1 1 0 0 1 1 3 1 1 1 0 1 1 0 2 0 1 0 1 3 2 1 0 3 2 1 2\n[77] 2 1 0 1\n\n# パターンの発見\nstr_detect(fruit, \"[a-b]\")\n\n [1]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[13]  TRUE  TRUE  TRUE FALSE FALSE FALSE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE\n[25]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE\n[37] FALSE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE FALSE FALSE  TRUE FALSE  TRUE\n[49]  TRUE  TRUE  TRUE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE\n[61]  TRUE  TRUE FALSE  TRUE FALSE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE FALSE\n[73]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE\n\n# 繰り返す\nstr_dup(letters, 5)\n\n [1] \"aaaaa\" \"bbbbb\" \"ccccc\" \"ddddd\" \"eeeee\" \"fffff\" \"ggggg\" \"hhhhh\" \"iiiii\"\n[10] \"jjjjj\" \"kkkkk\" \"lllll\" \"mmmmm\" \"nnnnn\" \"ooooo\" \"ppppp\" \"qqqqq\" \"rrrrr\"\n[19] \"sssss\" \"ttttt\" \"uuuuu\" \"vvvvv\" \"wwwww\" \"xxxxx\" \"yyyyy\" \"zzzzz\"\n\n# 終わる\nfruit[str_ends(fruit, \"a\")]\n\n[1] \"banana\"    \"cherimoya\" \"feijoa\"    \"guava\"     \"papaya\"    \"satsuma\"  \n\n# 同じ\nstr_equal(fruit, \"banana\")\n\n [1] FALSE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[13] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[25] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[37] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[49] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[61] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[73] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n# エスケープ\nstr_escape(\"^\")\n\n[1] \"\\\\^\"\n\nstr_extract(fruit, \"[a-c]\")\n\n [1] \"a\" \"a\" \"a\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"b\" \"c\" \"c\" \"c\" \"c\" \"c\" \"c\" \"c\"\n[20] \"c\" \"c\" \"c\" \"c\" \"a\" \"a\" \"a\" \"a\" \"a\" \"b\" \"a\" NA  \"b\" \"b\" \"a\" \"a\" \"a\" NA  \"c\"\n[39] \"a\" \"a\" \"b\" NA  \"a\" NA  NA  \"a\" \"c\" \"a\" \"a\" \"b\" \"c\" NA  NA  \"a\" \"a\" \"a\" \"a\"\n[58] \"a\" \"a\" NA  \"a\" \"a\" NA  \"a\" NA  \"a\" \"c\" \"a\" \"a\" \"a\" \"c\" \"c\" \"a\" \"a\" \"a\" \"a\"\n[77] \"a\" \"a\" NA  \"a\"\n\nstr_extract(fruit, \"b[a-n]\")\n\n [1] NA   NA   NA   \"ba\" \"be\" \"bi\" \"bl\" \"bl\" \"bl\" \"bl\" \"be\" NA   NA   NA   NA  \n[16] NA   NA   NA   \"be\" NA   \"be\" \"be\" NA   NA   NA   NA   NA   NA   \"be\" NA  \n[31] NA   \"be\" \"be\" NA   NA   NA   NA   \"be\" NA   NA   \"be\" NA   NA   NA   NA  \n[46] NA   NA   NA   NA   \"be\" NA   NA   NA   NA   NA   NA   NA   NA   NA   NA  \n[61] NA   NA   NA   NA   NA   NA   NA   NA   NA   \"be\" NA   NA   \"be\" NA   NA  \n[76] \"be\" NA   NA   NA   NA  \n\nstr_extract_all(fruit, \"apple\", simplify = TRUE)\n\n      [,1]   \n [1,] \"apple\"\n [2,] \"\"     \n [3,] \"\"     \n [4,] \"\"     \n [5,] \"\"     \n [6,] \"\"     \n [7,] \"\"     \n [8,] \"\"     \n [9,] \"\"     \n[10,] \"\"     \n[11,] \"\"     \n[12,] \"\"     \n[13,] \"\"     \n[14,] \"\"     \n[15,] \"\"     \n[16,] \"\"     \n[17,] \"\"     \n[18,] \"\"     \n[19,] \"\"     \n[20,] \"\"     \n[21,] \"\"     \n[22,] \"\"     \n[23,] \"\"     \n[24,] \"\"     \n[25,] \"\"     \n[26,] \"\"     \n[27,] \"\"     \n[28,] \"\"     \n[29,] \"\"     \n[30,] \"\"     \n[31,] \"\"     \n[32,] \"\"     \n[33,] \"\"     \n[34,] \"\"     \n[35,] \"\"     \n[36,] \"\"     \n[37,] \"\"     \n[38,] \"\"     \n[39,] \"\"     \n[40,] \"\"     \n[41,] \"\"     \n[42,] \"\"     \n[43,] \"\"     \n[44,] \"\"     \n[45,] \"\"     \n[46,] \"\"     \n[47,] \"\"     \n[48,] \"\"     \n[49,] \"\"     \n[50,] \"\"     \n[51,] \"\"     \n[52,] \"\"     \n[53,] \"\"     \n[54,] \"\"     \n[55,] \"\"     \n[56,] \"\"     \n[57,] \"\"     \n[58,] \"\"     \n[59,] \"\"     \n[60,] \"\"     \n[61,] \"\"     \n[62,] \"apple\"\n[63,] \"\"     \n[64,] \"\"     \n[65,] \"\"     \n[66,] \"\"     \n[67,] \"\"     \n[68,] \"\"     \n[69,] \"\"     \n[70,] \"\"     \n[71,] \"\"     \n[72,] \"\"     \n[73,] \"\"     \n[74,] \"\"     \n[75,] \"\"     \n[76,] \"\"     \n[77,] \"\"     \n[78,] \"\"     \n[79,] \"\"     \n[80,] \"\"     \n\nstr_detect(c(\"a\", \".\"), str_escape(\".\"))\n\n[1] FALSE  TRUE\n\nx <- \"Hello, World!\"\nstr_extract_all(x, boundary(\"character\"), simplify = TRUE)\n\n     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13]\n[1,] \"H\"  \"e\"  \"l\"  \"l\"  \"o\"  \",\"  \" \"  \"W\"  \"o\"  \"r\"   \"l\"   \"d\"   \"!\"  \n\nstr_extract_all(x, boundary(\"line_break\"), simplify = TRUE)\n\n     [,1]      [,2]    \n[1,] \"Hello, \" \"World!\"\n\nstr_extract_all(x, boundary(\"sentence\"), simplify = TRUE)\n\n     [,1]           \n[1,] \"Hello, World!\"\n\nstr_extract_all(x, boundary(\"word\"), simplify = TRUE)\n\n     [,1]    [,2]   \n[1,] \"Hello\" \"World\"\n\nstr_flatten(fruit)\n\n[1] \"appleapricotavocadobananabell pepperbilberryblackberryblackcurrantblood orangeblueberryboysenberrybreadfruitcanary meloncantaloupecherimoyacherrychili pepperclementinecloudberrycoconutcranberrycucumbercurrantdamsondatedragonfruitdurianeggplantelderberryfeijoafiggoji berrygooseberrygrapegrapefruitguavahoneydewhuckleberryjackfruitjambuljujubekiwi fruitkumquatlemonlimeloquatlycheemandarinemangomulberrynectarinenutoliveorangepamelopapayapassionfruitpeachpearpersimmonphysalispineappleplumpomegranatepomelopurple mangosteenquinceraisinrambutanraspberryredcurrantrock melonsalal berrysatsumastar fruitstrawberrytamarillotangerineugli fruitwatermelon\"\n\nstr_flatten_comma(fruit)\n\n[1] \"apple, apricot, avocado, banana, bell pepper, bilberry, blackberry, blackcurrant, blood orange, blueberry, boysenberry, breadfruit, canary melon, cantaloupe, cherimoya, cherry, chili pepper, clementine, cloudberry, coconut, cranberry, cucumber, currant, damson, date, dragonfruit, durian, eggplant, elderberry, feijoa, fig, goji berry, gooseberry, grape, grapefruit, guava, honeydew, huckleberry, jackfruit, jambul, jujube, kiwi fruit, kumquat, lemon, lime, loquat, lychee, mandarine, mango, mulberry, nectarine, nut, olive, orange, pamelo, papaya, passionfruit, peach, pear, persimmon, physalis, pineapple, plum, pomegranate, pomelo, purple mangosteen, quince, raisin, rambutan, raspberry, redcurrant, rock melon, salal berry, satsuma, star fruit, strawberry, tamarillo, tangerine, ugli fruit, watermelon\"\n\nstr_glue(\"I bought \", \"{fruit}\", \" by {rnorm(length(fruit), mean = 100, sd = 10) |> format(digits = 3)} yen\")\n\nI bought apple by  90.2 yen\nI bought apricot by  92.7 yen\nI bought avocado by  73.7 yen\nI bought banana by  97.2 yen\nI bought bell pepper by 102.6 yen\nI bought bilberry by 117.3 yen\nI bought blackberry by 118.3 yen\nI bought blackcurrant by  98.3 yen\nI bought blood orange by 104.6 yen\nI bought blueberry by 101.8 yen\nI bought boysenberry by 101.9 yen\nI bought breadfruit by  99.0 yen\nI bought canary melon by  95.0 yen\nI bought cantaloupe by  90.9 yen\nI bought cherimoya by  86.2 yen\nI bought cherry by 101.5 yen\nI bought chili pepper by  86.6 yen\nI bought clementine by  95.8 yen\nI bought cloudberry by  83.2 yen\nI bought coconut by 103.6 yen\nI bought cranberry by  88.3 yen\nI bought cucumber by  97.6 yen\nI bought currant by  99.1 yen\nI bought damson by 106.2 yen\nI bought date by  77.6 yen\nI bought dragonfruit by 110.4 yen\nI bought durian by  92.0 yen\nI bought eggplant by 102.2 yen\nI bought elderberry by  95.3 yen\nI bought feijoa by 104.8 yen\nI bought fig by  94.7 yen\nI bought goji berry by 105.5 yen\nI bought gooseberry by  97.8 yen\nI bought grape by 109.0 yen\nI bought grapefruit by  96.5 yen\nI bought guava by 103.1 yen\nI bought honeydew by 104.5 yen\nI bought huckleberry by 105.7 yen\nI bought jackfruit by 101.7 yen\nI bought jambul by  93.4 yen\nI bought jujube by  91.3 yen\nI bought kiwi fruit by 101.3 yen\nI bought kumquat by  91.7 yen\nI bought lemon by 103.5 yen\nI bought lime by  96.1 yen\nI bought loquat by  89.4 yen\nI bought lychee by  88.1 yen\nI bought mandarine by 106.6 yen\nI bought mango by 111.8 yen\nI bought mulberry by 100.0 yen\nI bought nectarine by  92.8 yen\nI bought nut by  97.1 yen\nI bought olive by 101.4 yen\nI bought orange by  96.4 yen\nI bought pamelo by  90.7 yen\nI bought papaya by 102.5 yen\nI bought passionfruit by 103.1 yen\nI bought peach by 100.7 yen\nI bought pear by 108.8 yen\nI bought persimmon by 100.8 yen\nI bought physalis by 104.1 yen\nI bought pineapple by 110.3 yen\nI bought plum by  91.1 yen\nI bought pomegranate by  96.6 yen\nI bought pomelo by  75.1 yen\nI bought purple mangosteen by 112.2 yen\nI bought quince by  97.8 yen\nI bought raisin by  93.3 yen\nI bought rambutan by  86.0 yen\nI bought raspberry by 108.2 yen\nI bought redcurrant by 106.1 yen\nI bought rock melon by 100.5 yen\nI bought salal berry by  75.5 yen\nI bought satsuma by  98.6 yen\nI bought star fruit by 102.5 yen\nI bought strawberry by 113.2 yen\nI bought tamarillo by  94.9 yen\nI bought tangerine by  95.5 yen\nI bought ugli fruit by  92.1 yen\nI bought watermelon by  99.9 yen\n\nstarwars |> str_glue_data(\"Is {height} over 100? {ifelse(height >= 100, 'Yes','No')}.\")\n\nIs 172 over 100? Yes.\nIs 167 over 100? Yes.\nIs 96 over 100? No.\nIs 202 over 100? Yes.\nIs 150 over 100? Yes.\nIs 178 over 100? Yes.\nIs 165 over 100? Yes.\nIs 97 over 100? No.\nIs 183 over 100? Yes.\nIs 182 over 100? Yes.\nIs 188 over 100? Yes.\nIs 180 over 100? Yes.\nIs 228 over 100? Yes.\nIs 180 over 100? Yes.\nIs 173 over 100? Yes.\nIs 175 over 100? Yes.\nIs 170 over 100? Yes.\nIs 180 over 100? Yes.\nIs 66 over 100? No.\nIs 170 over 100? Yes.\nIs 183 over 100? Yes.\nIs 200 over 100? Yes.\nIs 190 over 100? Yes.\nIs 177 over 100? Yes.\nIs 175 over 100? Yes.\nIs 180 over 100? Yes.\nIs 150 over 100? Yes.\nIs NA over 100? NA.\nIs 88 over 100? No.\nIs 160 over 100? Yes.\nIs 193 over 100? Yes.\nIs 191 over 100? Yes.\nIs 170 over 100? Yes.\nIs 196 over 100? Yes.\nIs 224 over 100? Yes.\nIs 206 over 100? Yes.\nIs 183 over 100? Yes.\nIs 137 over 100? Yes.\nIs 112 over 100? Yes.\nIs 183 over 100? Yes.\nIs 163 over 100? Yes.\nIs 175 over 100? Yes.\nIs 180 over 100? Yes.\nIs 178 over 100? Yes.\nIs 94 over 100? No.\nIs 122 over 100? Yes.\nIs 163 over 100? Yes.\nIs 188 over 100? Yes.\nIs 198 over 100? Yes.\nIs 196 over 100? Yes.\nIs 171 over 100? Yes.\nIs 184 over 100? Yes.\nIs 188 over 100? Yes.\nIs 264 over 100? Yes.\nIs 188 over 100? Yes.\nIs 196 over 100? Yes.\nIs 185 over 100? Yes.\nIs 157 over 100? Yes.\nIs 183 over 100? Yes.\nIs 183 over 100? Yes.\nIs 170 over 100? Yes.\nIs 166 over 100? Yes.\nIs 165 over 100? Yes.\nIs 193 over 100? Yes.\nIs 191 over 100? Yes.\nIs 183 over 100? Yes.\nIs 168 over 100? Yes.\nIs 198 over 100? Yes.\nIs 229 over 100? Yes.\nIs 213 over 100? Yes.\nIs 167 over 100? Yes.\nIs 79 over 100? No.\nIs 96 over 100? No.\nIs 193 over 100? Yes.\nIs 191 over 100? Yes.\nIs 178 over 100? Yes.\nIs 216 over 100? Yes.\nIs 234 over 100? Yes.\nIs 188 over 100? Yes.\nIs 178 over 100? Yes.\nIs 206 over 100? Yes.\nIs NA over 100? NA.\nIs NA over 100? NA.\nIs NA over 100? NA.\nIs NA over 100? NA.\nIs NA over 100? NA.\nIs 165 over 100? Yes.\n\nx <- c(NA,\"a\",\"b\",\"c\",NA)\nx\n\n[1] NA  \"a\" \"b\" \"c\" NA \n\nstr_c(\"fruit_\", x)\n\n[1] NA        \"fruit_a\" \"fruit_b\" \"fruit_c\" NA       \n\nstr_c(\"fruit_\", str_replace_na(x, replacement = \"DKNA\"))\n\n[1] \"fruit_DKNA\" \"fruit_a\"    \"fruit_b\"    \"fruit_c\"    \"fruit_DKNA\"\n\nstr_to_lower(LETTERS)\n\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n[20] \"t\" \"u\" \"v\" \"w\" \"x\" \"y\" \"z\"\n\nstr_sub(fruit, 1, 1) <- str_to_upper(str_sub(fruit, 1, 1))\nfruit\n\n [1] \"Apple\"             \"Apricot\"           \"Avocado\"          \n [4] \"Banana\"            \"Bell pepper\"       \"Bilberry\"         \n [7] \"Blackberry\"        \"Blackcurrant\"      \"Blood orange\"     \n[10] \"Blueberry\"         \"Boysenberry\"       \"Breadfruit\"       \n[13] \"Canary melon\"      \"Cantaloupe\"        \"Cherimoya\"        \n[16] \"Cherry\"            \"Chili pepper\"      \"Clementine\"       \n[19] \"Cloudberry\"        \"Coconut\"           \"Cranberry\"        \n[22] \"Cucumber\"          \"Currant\"           \"Damson\"           \n[25] \"Date\"              \"Dragonfruit\"       \"Durian\"           \n[28] \"Eggplant\"          \"Elderberry\"        \"Feijoa\"           \n[31] \"Fig\"               \"Goji berry\"        \"Gooseberry\"       \n[34] \"Grape\"             \"Grapefruit\"        \"Guava\"            \n[37] \"Honeydew\"          \"Huckleberry\"       \"Jackfruit\"        \n[40] \"Jambul\"            \"Jujube\"            \"Kiwi fruit\"       \n[43] \"Kumquat\"           \"Lemon\"             \"Lime\"             \n[46] \"Loquat\"            \"Lychee\"            \"Mandarine\"        \n[49] \"Mango\"             \"Mulberry\"          \"Nectarine\"        \n[52] \"Nut\"               \"Olive\"             \"Orange\"           \n[55] \"Pamelo\"            \"Papaya\"            \"Passionfruit\"     \n[58] \"Peach\"             \"Pear\"              \"Persimmon\"        \n[61] \"Physalis\"          \"Pineapple\"         \"Plum\"             \n[64] \"Pomegranate\"       \"Pomelo\"            \"Purple mangosteen\"\n[67] \"Quince\"            \"Raisin\"            \"Rambutan\"         \n[70] \"Raspberry\"         \"Redcurrant\"        \"Rock melon\"       \n[73] \"Salal berry\"       \"Satsuma\"           \"Star fruit\"       \n[76] \"Strawberry\"        \"Tamarillo\"         \"Tangerine\"        \n[79] \"Ugli fruit\"        \"Watermelon\"       \n\nstr_to_upper(\"gender\")\n\n[1] \"GENDER\"\n\nstr_to_upper(\"全角のａ\")\n\n[1] \"全角のＡ\"\n\nstr_to_lower(\"ESTSIMATE\")\n\n[1] \"estsimate\"\n\nstr_to_lower(\"Ａ\")\n\n[1] \"ａ\"\n\nstr_view(fruit, \"a\")\n\n [3] │ Avoc<a>do\n [4] │ B<a>n<a>n<a>\n [7] │ Bl<a>ckberry\n [8] │ Bl<a>ckcurr<a>nt\n [9] │ Blood or<a>nge\n[12] │ Bre<a>dfruit\n[13] │ C<a>n<a>ry melon\n[14] │ C<a>nt<a>loupe\n[15] │ Cherimoy<a>\n[21] │ Cr<a>nberry\n[23] │ Curr<a>nt\n[24] │ D<a>mson\n[25] │ D<a>te\n[26] │ Dr<a>gonfruit\n[27] │ Duri<a>n\n[28] │ Eggpl<a>nt\n[30] │ Feijo<a>\n[34] │ Gr<a>pe\n[35] │ Gr<a>pefruit\n[36] │ Gu<a>v<a>\n... and 28 more\n\nstr_view(fruit, \"[ae]\")\n\n [1] │ Appl<e>\n [3] │ Avoc<a>do\n [4] │ B<a>n<a>n<a>\n [5] │ B<e>ll p<e>pp<e>r\n [6] │ Bilb<e>rry\n [7] │ Bl<a>ckb<e>rry\n [8] │ Bl<a>ckcurr<a>nt\n [9] │ Blood or<a>ng<e>\n[10] │ Blu<e>b<e>rry\n[11] │ Boys<e>nb<e>rry\n[12] │ Br<e><a>dfruit\n[13] │ C<a>n<a>ry m<e>lon\n[14] │ C<a>nt<a>loup<e>\n[15] │ Ch<e>rimoy<a>\n[16] │ Ch<e>rry\n[17] │ Chili p<e>pp<e>r\n[18] │ Cl<e>m<e>ntin<e>\n[19] │ Cloudb<e>rry\n[21] │ Cr<a>nb<e>rry\n[22] │ Cucumb<e>r\n... and 53 more\n\nstr_view(fruit, \".a.\")\n\n [3] │ Avo<cad>o\n [4] │ <Ban>ana\n [7] │ B<lac>kberry\n [8] │ B<lac>kcur<ran>t\n [9] │ Blood o<ran>ge\n[12] │ Br<ead>fruit\n[13] │ <Can>ary melon\n[14] │ <Can><tal>oupe\n[21] │ C<ran>berry\n[23] │ Cur<ran>t\n[24] │ <Dam>son\n[25] │ <Dat>e\n[26] │ D<rag>onfruit\n[27] │ Dur<ian>\n[28] │ Eggp<lan>t\n[34] │ G<rap>e\n[35] │ G<rap>efruit\n[36] │ G<uav>a\n[39] │ <Jac>kfruit\n[40] │ <Jam>bul\n... and 26 more\n\nstr_view(fruit, \"^A\")\n\n[1] │ <A>pple\n[2] │ <A>pricot\n[3] │ <A>vocado\n\nstr_view(fruit, \"a$\")\n\n [4] │ Banan<a>\n[15] │ Cherimoy<a>\n[30] │ Feijo<a>\n[36] │ Guav<a>\n[56] │ Papay<a>\n[74] │ Satsum<a>\n\nstr_view(fruit, \".a.|.b.\")\n\n [3] │ Avo<cad>o\n [4] │ <Ban>ana\n [6] │ Bi<lbe>rry\n [7] │ B<lac><kbe>rry\n [8] │ B<lac>kcur<ran>t\n [9] │ Blood o<ran>ge\n[10] │ Blu<ebe>rry\n[11] │ Boyse<nbe>rry\n[12] │ Br<ead>fruit\n[13] │ <Can>ary melon\n[14] │ <Can><tal>oupe\n[19] │ Clou<dbe>rry\n[21] │ C<ran>berry\n[22] │ Cucu<mbe>r\n[23] │ Cur<ran>t\n[24] │ <Dam>son\n[25] │ <Dat>e\n[26] │ D<rag>onfruit\n[27] │ Dur<ian>\n[28] │ Eggp<lan>t\n... and 37 more\n\n\n\nstr_view(words, \"^y\")\n\n[975] │ <y>ear\n[976] │ <y>es\n[977] │ <y>esterday\n[978] │ <y>et\n[979] │ <y>ou\n[980] │ <y>oung\n\nstr_view(words, \"x$\")\n\n[108] │ bo<x>\n[747] │ se<x>\n[772] │ si<x>\n[841] │ ta<x>\n\nstr_view(words, \"^...$\")\n\n  [9] │ <act>\n [12] │ <add>\n [22] │ <age>\n [24] │ <ago>\n [26] │ <air>\n [27] │ <all>\n [38] │ <and>\n [41] │ <any>\n [51] │ <arm>\n [54] │ <art>\n [56] │ <ask>\n [68] │ <bad>\n [69] │ <bag>\n [73] │ <bar>\n [82] │ <bed>\n [89] │ <bet>\n [91] │ <big>\n [94] │ <bit>\n[108] │ <box>\n[109] │ <boy>\n... and 90 more\n\nstr_view(words, \"^*.......*$\")\n\n [4] │ <absolute>\n [5] │ <accept>\n [6] │ <account>\n [7] │ <achieve>\n [8] │ <across>\n[10] │ <active>\n[11] │ <actual>\n[13] │ <address>\n[15] │ <advertise>\n[16] │ <affect>\n[17] │ <afford>\n[19] │ <afternoon>\n[21] │ <against>\n[29] │ <almost>\n[31] │ <already>\n[32] │ <alright>\n[34] │ <although>\n[35] │ <always>\n[36] │ <america>\n[37] │ <amount>\n... and 368 more\n\nstr_view(words, \"[^a-u]\")\n\n  [7] │ achie<v>e\n [10] │ acti<v>e\n [15] │ ad<v>ertise\n [28] │ allo<w>\n [31] │ alread<y>\n [35] │ al<w>a<y>s\n [40] │ ans<w>er\n [41] │ an<y>\n [45] │ appl<y>\n [61] │ authorit<y>\n [62] │ a<v>ailable\n [63] │ a<w>are\n [64] │ a<w>a<y>\n [65] │ a<w>ful\n [66] │ bab<y>\n [79] │ beaut<y>\n [86] │ belie<v>e\n [90] │ bet<w>een\n [98] │ blo<w>\n[102] │ bod<y>\n... and 229 more\n\nstr_view(words, \"a|b\")\n\n [1] │ <a>\n [2] │ <a><b>le\n [3] │ <a><b>out\n [4] │ <a><b>solute\n [5] │ <a>ccept\n [6] │ <a>ccount\n [7] │ <a>chieve\n [8] │ <a>cross\n [9] │ <a>ct\n[10] │ <a>ctive\n[11] │ <a>ctu<a>l\n[12] │ <a>dd\n[13] │ <a>ddress\n[14] │ <a>dmit\n[15] │ <a>dvertise\n[16] │ <a>ffect\n[17] │ <a>fford\n[18] │ <a>fter\n[19] │ <a>fternoon\n[20] │ <a>g<a>in\n... and 391 more\n\nstr_view(words, \"(a|b)\")\n\n [1] │ <a>\n [2] │ <a><b>le\n [3] │ <a><b>out\n [4] │ <a><b>solute\n [5] │ <a>ccept\n [6] │ <a>ccount\n [7] │ <a>chieve\n [8] │ <a>cross\n [9] │ <a>ct\n[10] │ <a>ctive\n[11] │ <a>ctu<a>l\n[12] │ <a>dd\n[13] │ <a>ddress\n[14] │ <a>dmit\n[15] │ <a>dvertise\n[16] │ <a>ffect\n[17] │ <a>fford\n[18] │ <a>fter\n[19] │ <a>fternoon\n[20] │ <a>g<a>in\n... and 391 more"
  },
  {
    "objectID": "variables.html#変数名のクリーニング",
    "href": "variables.html#変数名のクリーニング",
    "title": "4  変数へのアクセス",
    "section": "5.5 変数名のクリーニング",
    "text": "5.5 変数名のクリーニング\n\n#janitor::clean_names()"
  },
  {
    "objectID": "ggplot.html",
    "href": "ggplot.html",
    "title": "5  ggplotによるグラフ作成",
    "section": "",
    "text": "Rのベース機能でも様々な図を描くことが可能であるが，ggplot2パッケージは美しい図を描く上で非常に役立つ．ggplot2による描画はデータ分析にRを用いる上での重要な特徴といえる．\nx軸の数値をなくしたければx = \"\"とする．\npacthworkパッケージを用いることで図のオブジェクトを+でつなぐことで簡単に 図を結合することができる．次ではp1，p2，p3という図のオブジェクトを作成し それらをp1 + p2 + p3として結合している．"
  },
  {
    "objectID": "ggplot.html#度数分布",
    "href": "ggplot.html#度数分布",
    "title": "5  ggplotによるグラフ作成",
    "section": "5.1 度数分布",
    "text": "5.1 度数分布\n各値の度数を棒グラフを作成する．\n\nggplot(data = penguins, aes(x = species)) + \n  geom_bar()\n\n\n\n\n各値の度数を集計し，その値を指定して棒グラフを作成する．\n\npenguins |> \n  count(species) |> \n  ggplot(aes(x = species, y = n)) + \n  geom_col()"
  },
  {
    "objectID": "ggplot.html#カテゴリカル変数と連続変数",
    "href": "ggplot.html#カテゴリカル変数と連続変数",
    "title": "5  ggplotによるグラフ作成",
    "section": "6.1 カテゴリカル変数と連続変数",
    "text": "6.1 カテゴリカル変数と連続変数\ngeom_densityやgeom_histogramは1つの変数の分布について図示するが， 別のカテゴリカル変数の値別に図示することで， カテゴリ変数によって連続変数の分布がどのように異なるのかを 明らかにすることができる．\ngroupで変数を指定すると，変数の値別に図を作成する． ただし色，線の種類，塗りつぶしなどが全て同じになるため，凡例は作成されない．\n\nggplot(data = penguins, aes(x = flipper_length_mm,\n                            group = species)) + \n  geom_density()\n\nWarning: Removed 2 rows containing non-finite values (`stat_density()`).\n\n\n\n\n\nどの図がどのカテゴリカル変数の値に対応しているのかを明らかにしたい場合は， 色，線の種類，塗りつぶしをカテゴリカル変数の値によって変更する．\n色（color）をspeciesの値で分ける．\n\nggplot(data = penguins, aes(x = flipper_length_mm,\n                            color = species)) + \n  geom_density() + \n  scale_color_colorblind()\n\nWarning: Removed 2 rows containing non-finite values (`stat_density()`).\n\n\n\n\n\n線の種類（linetype）をspeciesの値で分ける．\n\nggplot(data = penguins, aes(x = flipper_length_mm,\n                            linetype = species)) + \n  geom_density()\n\nWarning: Removed 2 rows containing non-finite values (`stat_density()`).\n\n\n\n\n\n塗りつぶし（fill）をspeciesの値で分ける．\n\nggplot(data = penguins, aes(x = flipper_length_mm,\n                            fill = species)) + \n  geom_density(alpha = .5) + \n  scale_fill_colorblind()\n\nWarning: Removed 2 rows containing non-finite values (`stat_density()`).\n\n\n\n\n\n色，線の種類，塗りつぶしをspeciesの値で分ける．ただしどれか1つを指定すれば， どのカテゴリカル変数の値と図が対応しているのかは分かるので，ここまでする必要はないだろう．\n\nggplot(data = penguins, aes(x = flipper_length_mm,\n                            fill = species,\n                            color = species,\n                            linetype = species)) + \n  geom_density(alpha = .5) + \n  scale_color_colorblind() + \n  scale_fill_colorblind()\n\nWarning: Removed 2 rows containing non-finite values (`stat_density()`).\n\n\n\n\n\nカテゴリカル変数をx軸に， 連続変数をy軸に設定して図を描く．\n散布図を描く．\n\nggplot(data = penguins, aes(x = species, y = flipper_length_mm)) + \n  geom_point()\n\nWarning: Removed 2 rows containing missing values (`geom_point()`).\n\n\n\n\n\n箱ひげ図を描く．\n\nggplot(data = penguins, aes(x = species, y = flipper_length_mm)) + \n  geom_boxplot()\n\nWarning: Removed 2 rows containing non-finite values (`stat_boxplot()`).\n\n\n\n\n\n\nggplot(data = penguins, aes(x = species, y = flipper_length_mm)) + \n  geom_boxplot() + \n  geom_jitter(color = \"skyblue\",\n              alpha = .7)\n\nWarning: Removed 2 rows containing non-finite values (`stat_boxplot()`).\n\n\nWarning: Removed 2 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\nggplot(data = penguins, aes(x = species, y = flipper_length_mm, color = species)) + \n  geom_boxplot() + \n  geom_jitter(color = \"skyblue\",\n              alpha = .7) + \n  scale_color_colorblind()\n\nWarning: Removed 2 rows containing non-finite values (`stat_boxplot()`).\n\n\nWarning: Removed 2 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\nggplot(data = penguins, aes(x = species, y = flipper_length_mm, fill = species)) + \n  geom_boxplot() + \n  geom_jitter(color = \"skyblue\",\n              alpha = .7) + \n  scale_fill_colorblind()\n\nWarning: Removed 2 rows containing non-finite values (`stat_boxplot()`).\n\n\nWarning: Removed 2 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\nggplot(data = penguins, aes(x = species, y = flipper_length_mm)) + \n  stat_summary(fun.data = \"mean_cl_boot\")\n\nWarning: Removed 2 rows containing non-finite values (`stat_summary()`).\n\n\n\n\n\n平均値と信頼区間を求める．\n\npenguins |> \n  summarise(Mean = mean(flipper_length_mm, na.rm = TRUE),\n            SD = sd(flipper_length_mm, na.rm = TRUE),\n            n = sum(!is.na(flipper_length_mm)),\n            ll = Mean + qt(0.025, df = n - 1) * SD / sqrt(n),\n            ul = Mean + qt(0.975, df = n - 1) * SD / sqrt(n))\n\n# A tibble: 1 × 5\n   Mean    SD     n    ll    ul\n  <dbl> <dbl> <int> <dbl> <dbl>\n1  201.  14.1   342  199.  202.\n\n\nカテゴリカル変数を.byでグループ変数として指定し，平均値と信頼区間を求める．\n\ntab_flipper_length_mm_by_species <- \n  penguins |> \n  summarise(Mean = mean(flipper_length_mm, na.rm = TRUE),\n            SD = sd(flipper_length_mm, na.rm = TRUE),\n            n = sum(!is.na(flipper_length_mm)),\n            ll = Mean + qt(0.025, df = n - 1) * SD / sqrt(n),\n            ul = Mean + qt(0.975, df = n - 1) * SD / sqrt(n),\n            .by = species)\ntab_flipper_length_mm_by_species\n\n# A tibble: 3 × 6\n  species    Mean    SD     n    ll    ul\n  <fct>     <dbl> <dbl> <int> <dbl> <dbl>\n1 Adelie     190.  6.54   151  189.  191.\n2 Gentoo     217.  6.48   123  216.  218.\n3 Chinstrap  196.  7.13    68  194.  198.\n\n\n集計した値をもとに，図を描く．\n\ntab_flipper_length_mm_by_species |> \n  ggplot(aes(x = species, y = Mean, ymin = ll, ymax = ul)) + \n  geom_pointrange()"
  },
  {
    "objectID": "ggplot.html#連続変数と連続変数",
    "href": "ggplot.html#連続変数と連続変数",
    "title": "5  ggplotによるグラフ作成",
    "section": "6.2 連続変数と連続変数",
    "text": "6.2 連続変数と連続変数\n\nggplot(data = penguins, aes(x = bill_length_mm, \n                            y = flipper_length_mm)) + \n  geom_point()\n\nWarning: Removed 2 rows containing missing values (`geom_point()`).\n\n\n\n\n\n警告が出ないようにするためにはgeom_point(na.rm = TRUE)とする．\n別の変数の値によって色を変更する．\n\nggplot(data = penguins, aes(x = bill_length_mm, \n                            y = flipper_length_mm,\n                            color = species)) + \n  geom_point()\n\nWarning: Removed 2 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\nggplot(data = penguins, aes(x = bill_length_mm, \n                            y = flipper_length_mm,\n                            color = species)) + \n  geom_point() + \n  geom_smooth(method = lm)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_smooth()`).\n\n\nWarning: Removed 2 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\nggplot(data = penguins, aes(x = bill_length_mm, \n                            y = flipper_length_mm)) + \n  geom_point(aes(color = species)) + \n  geom_smooth(aes(color = species), \n              method = lm) + \n  geom_smooth(method = lm)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_smooth()`).\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_smooth()`).\n\n\nWarning: Removed 2 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\nggplot(data = penguins, aes(x = bill_length_mm, \n                            y = flipper_length_mm,\n                            group =  interaction(year, species, sep = \": \"))) + \n  geom_point(aes(shape = species, color = species)) + \n  geom_smooth(aes(color = species,\n                  linetype = factor(year)), \n              method = lm) +\n  labs(linetype = \"year\") +\n  scale_color_colorblind()\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_smooth()`).\n\n\nWarning: Removed 2 rows containing missing values (`geom_point()`)."
  },
  {
    "objectID": "data.html#ロングデータの作成",
    "href": "data.html#ロングデータの作成",
    "title": "3  データの読み込み",
    "section": "3.9 ロングデータの作成",
    "text": "3.9 ロングデータの作成\nパネルデータで分析を行う場合に，ロング形式のデータにしたほうがよい． pivot_longerを使えば簡単にロング形式のデータが作成できる．\nhttps://r4ds.hadley.nz/data-tidy.html#sec-pivoting を参照．\nまずはidと必要な変数zq1，zq5，aq1，aq5を準備する． transmuteで必要があれば変換して，新たな名前を与える．この時変数名__年のようにする．_でもよいが，その場合は他の変数に_が含まれていないことを確認する．\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ purrr     1.0.1\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n\nd_wide <- tibble(\n  id = 1:10,\n  zq1 = rnorm(10),\n  zq5 = rbinom(10, size = 1, prob = .5),\n  aq1 = rnorm(10),\n  aq5 = rbinom(10, size = 1, prob = .5)\n)\nd_wide\n\n# A tibble: 10 × 5\n      id     zq1   zq5     aq1   aq5\n   <int>   <dbl> <int>   <dbl> <int>\n 1     1 -0.388      1 -0.632      1\n 2     2  0.156      0  1.87       0\n 3     3  2.86       1 -1.34       0\n 4     4 -0.0466     1  0.437      1\n 5     5  1.01       0  0.531      1\n 6     6 -0.609      1  0.0495     1\n 7     7 -0.483      0  0.727      1\n 8     8  0.614      0 -0.0605     0\n 9     9 -0.591      1 -2.04       1\n10    10 -1.63       0 -0.850      0\n\nd_wide |> \n  transmute(id,\n            y__2007 = zq1,\n            x__2007 = zq5,\n            y__2008 = aq1,\n            x__2008 = aq5) |> \n  pivot_longer(\n    cols = y__2007:x__2008, \n    names_to = c(\".value\", \"year\"), \n    names_sep = \"__\", \n    values_drop_na = TRUE\n  ) |> \n  mutate(year = parse_number(year))\n\n# A tibble: 20 × 4\n      id  year       y     x\n   <int> <dbl>   <dbl> <int>\n 1     1  2007 -0.388      1\n 2     1  2008 -0.632      1\n 3     2  2007  0.156      0\n 4     2  2008  1.87       0\n 5     3  2007  2.86       1\n 6     3  2008 -1.34       0\n 7     4  2007 -0.0466     1\n 8     4  2008  0.437      1\n 9     5  2007  1.01       0\n10     5  2008  0.531      1\n11     6  2007 -0.609      1\n12     6  2008  0.0495     1\n13     7  2007 -0.483      0\n14     7  2008  0.727      1\n15     8  2007  0.614      0\n16     8  2008 -0.0605     0\n17     9  2007 -0.591      1\n18     9  2008 -2.04       1\n19    10  2007 -1.63       0\n20    10  2008 -0.850      0"
  }
]